{
"version":3,
"file":"goog.html.sanitizer.csssanitizer.js",
"lineCount":144,
"mappings":"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",
"sources":["goog/html/sanitizer/csssanitizer.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview\n * JavaScript support for client-side CSS sanitization.\n */\n\ngoog.provide('goog.html.sanitizer.CssSanitizer');\n\ngoog.require('goog.array');\ngoog.require('goog.dom');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.dom.safe');\ngoog.require('goog.html.CssSpecificity');\ngoog.require('goog.html.SafeStyle');\ngoog.require('goog.html.SafeStyleSheet');\ngoog.require('goog.html.SafeUrl');\ngoog.require('goog.html.sanitizer.CssPropertySanitizer');\ngoog.require('goog.html.sanitizer.noclobber');\ngoog.require('goog.html.uncheckedconversions');\ngoog.require('goog.object');\ngoog.require('goog.string');\ngoog.require('goog.string.Const');\ngoog.require('goog.userAgent');\ngoog.require('goog.userAgent.product');\n\n\n\n/**\n * A regular expression to match each selector in a CSS rule. Selectors are\n * separated by commas, but can have strings within them (e.g. foo[name=\"bar\"])\n * that can contain commas and escaped quotes.\n * @private {?RegExp}\n */\ngoog.html.sanitizer.CssSanitizer.SELECTOR_REGEX_ =\n    // Don't even evaluate it on older browsers (IE8 and IE9), it throws a\n    // syntax error and we don't use it anyway.\n    !(goog.userAgent.IE && document.documentMode < 10) ?\n    new RegExp(\n        '\\\\s*' +              // Discard initial space\n            '([^\\\\s\\'\",]+' +  // Beginning of the match. Anything but a comma,\n                              // spaces or a string delimiter. This is the only\n                              // non-optional component of the regex.\n            '[^\\'\",]*' +      // Spaces are fine afterwards (e.g. \"a > b\").\n            ('(' +  // A series of optional strings with matching delimiters\n                    // that can contain anything, and optional non-quoted text\n                    // without commas.\n             '(\\'([^\\'\\\\r\\\\n\\\\f\\\\\\\\]|\\\\\\\\[^])*\\')|' +  // Optional single-quoted\n                                                       // string.\n             '(\"([^\"\\\\r\\\\n\\\\f\\\\\\\\]|\\\\\\\\[^])*\")|' +     // Optional double-quoted\n                                                       // string.\n             '[^\\'\",]' +  // Optional non-string content.\n             ')*') +      // String and non-string\n                          // content can come in any\n                          // order.\n            ')',          // End of the match.\n        'g') :\n    null;\n\n\n/**\n * A whitelist of properties that can retain the prefix in Chrome.\n * @private @const {!Object<string,boolean>}\n */\ngoog.html.sanitizer.CssSanitizer.CHROME_INCLUDE_VENDOR_PREFIX_WHITELIST_ =\n    goog.object.createSet(\n        '-webkit-border-horizontal-spacing', '-webkit-border-vertical-spacing');\n\n\n/**\n * Removes a vendor prefix from a property name.\n * @param {string} propName A property name.\n * @return {string} A property name without vendor prefixes.\n * @private\n */\ngoog.html.sanitizer.CssSanitizer.withoutVendorPrefix_ = function(propName) {\n  'use strict';\n  // A few property names are only valid with the prefix on specific browsers.\n  // The recommendation is of course to avoid them, but in specific cases a\n  // non-prefixed property gets transformed into one or more prefixed\n  // properties by the browser. In this case, the best option to avoid having\n  // the non-prefixed property be dropped silently is to allow the prefixed\n  // property in the output.\n  if (goog.userAgent.WEBKIT &&\n      propName in goog.html.sanitizer.CssSanitizer\n                      .CHROME_INCLUDE_VENDOR_PREFIX_WHITELIST_) {\n    return propName;\n  }\n  // http://stackoverflow.com/a/5411098/20394 has a fairly extensive list\n  // of vendor prefixes. Blink has not declared a vendor prefix distinct from\n  // -webkit- and http://css-tricks.com/tldr-on-vendor-prefix-drama/ discusses\n  // how Mozilla recognizes some -webkit- prefixes.\n  // http://wiki.csswg.org/spec/vendor-prefixes talks more about\n  // cross-implementation, and lists other prefixes.\n  return propName.replace(\n      /^-(?:apple|css|epub|khtml|moz|mso?|o|rim|wap|webkit|xv)-(?=[a-z])/i, '');\n};\n\n\n/**\n * Sanitizes a {@link CSSStyleSheet}.\n * @param {!CSSStyleSheet} cssStyleSheet\n * @param {?string} containerId An ID to restrict the scope of the rules being\n *     sanitized. If null, no restriction is applied.\n * @param {function(string, string):?goog.html.SafeUrl|undefined} uriRewriter A\n *     URI rewriter that returns a goog.html.SafeUrl.\n * @return {!goog.html.SafeStyleSheet}\n * @private\n */\ngoog.html.sanitizer.CssSanitizer.sanitizeStyleSheet_ = function(\n    cssStyleSheet, containerId, uriRewriter) {\n  'use strict';\n  var sanitizedRules = [];\n  var cssRules = goog.html.sanitizer.CssSanitizer.getOnlyStyleRules_(\n      goog.array.toArray(cssStyleSheet.cssRules));\n  cssRules.forEach(function(cssRule) {\n    'use strict';\n    if (containerId && !/[a-zA-Z][\\w-:\\.]*/.test(containerId)) {\n      // Sanity check on the element ID that will confine the new CSS rules.\n      throw new Error('Invalid container id');\n    }\n    if (containerId && goog.userAgent.product.IE &&\n        document.documentMode == 10 && /\\\\['\"]/.test(cssRule.selectorText)) {\n      // If a container ID was specified, drop selectors with escaped quotes in\n      // strings on IE 10 due to a regex bug.\n      return;\n    }\n    // If a container ID was specified, restrict all selectors in this rule to\n    // be descendants of the node with such an ID. Use a regex to exclude commas\n    // within selector strings.\n    var scopedSelector = containerId ?\n        cssRule.selectorText.replace(\n            goog.html.sanitizer.CssSanitizer.SELECTOR_REGEX_,\n            '#' + containerId + ' $1') :\n        cssRule.selectorText;\n    sanitizedRules.push(goog.html.SafeStyleSheet.createRule(\n        scopedSelector,\n        goog.html.sanitizer.CssSanitizer.sanitizeInlineStyle(\n            cssRule.style, uriRewriter)));\n  });\n  return goog.html.SafeStyleSheet.concat(sanitizedRules);\n};\n\n\n/**\n * Used to filter out at-rules like @media, @font, etc. Currently, none of these\n * are supported.\n * @param {!Array<!CSSRule>} cssRules\n * @return {!Array<!CSSStyleRule>}\n * @private\n */\n// TODO(pelizzi): some of these at-rules are safe, consider adding partial\n// support for them.\ngoog.html.sanitizer.CssSanitizer.getOnlyStyleRules_ = function(cssRules) {\n  'use strict';\n  return /** @type {!Array<!CSSStyleRule>} */ (\n      cssRules.filter(function(cssRule) {\n        'use strict';\n        return cssRule instanceof CSSStyleRule ||\n            cssRule.type == CSSRule.STYLE_RULE;\n      }));\n};\n\n\n/**\n * Sanitizes the contents of a STYLE tag.\n * @param {string} textContent The textual content of the STYLE tag.\n * @param {?string=} opt_containerId The ID of a node that will contain the\n *     STYLE tag that includes the sanitized content, to restrict the effects of\n *     the rules being sanitized to descendants of this node.\n * @param {function(string, string):?goog.html.SafeUrl=} opt_uriRewriter A URI\n *     rewriter that returns a goog.html.SafeUrl.\n * @return {!goog.html.SafeStyleSheet}\n * @supported IE 10+, Chrome 26+, Firefox 22+, Safari 7.1+, Opera 15+. On IE10,\n *     support for escaped quotes inside quoted strings (e.g. `a[name=\"it\\'s\"]`)\n *     is unreliable, and some (but not all!) rules containing these are\n *     silently dropped.\n */\ngoog.html.sanitizer.CssSanitizer.sanitizeStyleSheetString = function(\n    textContent, opt_containerId, opt_uriRewriter) {\n  'use strict';\n  var styleTag = /** @type {?HTMLStyleElement} */\n      (goog.html.sanitizer.CssSanitizer.safeParseHtmlAndGetInertElement(\n          '<style>' + textContent + '</style>'));\n  if (styleTag == null || styleTag.sheet == null) {\n    return goog.html.SafeStyleSheet.EMPTY;\n  }\n  var containerId = opt_containerId != undefined ? opt_containerId : null;\n  return goog.html.sanitizer.CssSanitizer.sanitizeStyleSheet_(\n      /** @type {!CSSStyleSheet} */ (styleTag.sheet), containerId,\n      opt_uriRewriter);\n};\n\n\n/**\n * Returns an inert DOM tree produced by parsing the provided html using\n * DOMParser. \"Inert\" here means that merely parsing the string won't execute\n * scripts or load images. If you attach this tree to a non-inert document, it\n * will execute these side effects! In this package we prefer using the TEMPLATE\n * tag over DOMParser to produce inert trees, but at least on Chrome the inert\n * STYLE tag does not have a CSSStyleSheet object attached to it.\n * @param {string} html\n * @return {?Element}\n */\ngoog.html.sanitizer.CssSanitizer.safeParseHtmlAndGetInertElement = function(\n    html) {\n  'use strict';\n  if ((goog.userAgent.IE && !goog.userAgent.isVersionOrHigher(10)) ||\n      typeof goog.global.DOMParser != 'function') {\n    return null;\n  }\n  var safeHtml = goog.html.uncheckedconversions\n                     .safeHtmlFromStringKnownToSatisfyTypeContract(\n                         goog.string.Const.from('Never attached to DOM.'),\n                         '<html><head></head><body>' + html + '</body></html>');\n  return goog.dom.safe.parseFromStringHtml(new DOMParser(), safeHtml)\n      .body.children[0];\n};\n\n\n/**\n * Sanitizes an inline style attribute. Short-hand attributes are expanded to\n * their individual elements. Note: The sanitizer does not output vendor\n * prefixed styles.\n * @param {?CSSStyleDeclaration} cssStyle A CSS style object.\n * @param {function(string, string):?goog.html.SafeUrl=} opt_uriRewriter A URI\n *     rewriter that returns a goog.html.SafeUrl.\n * @return {!goog.html.SafeStyle} A sanitized inline cssText.\n */\ngoog.html.sanitizer.CssSanitizer.sanitizeInlineStyle = function(\n    cssStyle, opt_uriRewriter) {\n  'use strict';\n  if (!cssStyle) {\n    return goog.html.SafeStyle.EMPTY;\n  }\n\n  var cleanCssStyle = document.createElement('div').style;\n  var cssPropNames =\n      goog.html.sanitizer.CssSanitizer.getCssPropNames_(cssStyle);\n\n  cssPropNames.forEach(function(propName) {\n    'use strict';\n    var propNameWithoutPrefix =\n        goog.html.sanitizer.CssSanitizer.withoutVendorPrefix_(propName);\n    if (!goog.html.sanitizer.CssSanitizer.isDisallowedPropertyName_(\n            propNameWithoutPrefix)) {\n      var propValue = goog.html.sanitizer.noclobber.getCssPropertyValue(\n          /** @type {!CSSStyleDeclaration} */ (cssStyle), propName);\n      var sanitizedValue =\n          goog.html.sanitizer.CssPropertySanitizer.sanitizeProperty(\n              propNameWithoutPrefix, propValue, opt_uriRewriter);\n      if (sanitizedValue != null) {\n        goog.html.sanitizer.noclobber.setCssProperty(\n            cleanCssStyle, propNameWithoutPrefix, sanitizedValue);\n      }\n    }\n  });\n  return goog.html.uncheckedconversions\n      .safeStyleFromStringKnownToSatisfyTypeContract(\n          goog.string.Const.from('Output of CSS sanitizer'),\n          cleanCssStyle.cssText || '');\n};\n\n\n/**\n * Sanitizes inline CSS text and returns it as a SafeStyle object. When adequate\n * browser support is not available, such as for IE9 and below, a\n * SafeStyle-wrapped empty string is returned.\n * @param {string} cssText CSS text to be sanitized.\n * @param {function(string, string):?goog.html.SafeUrl=} opt_uriRewriter A URI\n *     rewriter that returns a goog.html.SafeUrl.\n * @return {!goog.html.SafeStyle} A sanitized inline cssText.\n */\ngoog.html.sanitizer.CssSanitizer.sanitizeInlineStyleString = function(\n    cssText, opt_uriRewriter) {\n  'use strict';\n  // same check as in goog.html.sanitizer.HTML_SANITIZER_SUPPORTED_\n  if (goog.userAgent.IE && document.documentMode < 10) {\n    return goog.html.SafeStyle.EMPTY;\n  }\n\n  var div = goog.html.sanitizer.CssSanitizer\n      .createInertDocument_()\n      .createElement('DIV');\n  div.style.cssText = cssText;\n  return goog.html.sanitizer.CssSanitizer.sanitizeInlineStyle(\n      div.style, opt_uriRewriter);\n};\n\n\n/**\n * Converts rules in STYLE tags into style attributes on the tags they apply to.\n * Modifies the provided DOM subtree in-place.\n * @param {!Element} element\n * @package\n */\ngoog.html.sanitizer.CssSanitizer.inlineStyleRules = function(element) {\n  'use strict';\n  // Note that Webkit used to offer the perfect function for the job:\n  // getMatchedCSSRules. Unfortunately, it was never supported cross-browser and\n  // is deprecated now. On the other hand, getComputedStyle cannot be used to\n  // differentiate property values that are set by a style sheet from those set\n  // by a style attribute or default values. This algorithm with\n  // O(nr_of_elements * nr_of_rules) complexity that has to manually sort\n  // selectors by specificity is the best we can do.\n\n  // Extract all rules from STYLE tags found in the subtree.\n  /** @type {!Array<!HTMLStyleElement>} */\n  var styleTags =\n      goog.html.sanitizer.noclobber.getElementsByTagName(element, 'STYLE');\n  var cssRules = goog.array.concatMap(styleTags, function(styleTag) {\n    'use strict';\n    return goog.array.toArray(\n        goog.html.sanitizer.noclobber.getElementStyleSheet(styleTag).cssRules);\n  });\n  cssRules = goog.html.sanitizer.CssSanitizer.getOnlyStyleRules_(cssRules);\n  // Sort the rules by descending specificity.\n  cssRules.sort(function(a, b) {\n    'use strict';\n    var aSpecificity = goog.html.CssSpecificity.getSpecificity(a.selectorText);\n    var bSpecificity = goog.html.CssSpecificity.getSpecificity(b.selectorText);\n    return -goog.array.compare3(aSpecificity, bSpecificity);\n  });\n  // For each element, apply the matching rules to the element style attribute.\n  // If a property is already explicitly defined, do not update it. This\n  // guarantees that the rule with selectors with the highest priority (or the\n  // properties defined in the style attribute itself) have precedence over\n  // lower priority ones.\n  var subTreeWalker = document.createTreeWalker(\n      element, NodeFilter.SHOW_ELEMENT, null /* filter */,\n      false /* entityReferenceExpansion */);\n  var currentElement;\n  while (currentElement = /** @type {!Element} */ (subTreeWalker.nextNode())) {\n    cssRules.forEach(function(rule) {\n      'use strict';\n      if (!goog.html.sanitizer.noclobber.elementMatches(\n              currentElement, rule.selectorText)) {\n        return;\n      }\n      if (!rule.style) {\n        return;\n      }\n      goog.html.sanitizer.CssSanitizer.mergeStyleDeclarations_(\n          currentElement, rule.style);\n    });\n  }\n  // Delete the STYLE tags.\n  styleTags.forEach(goog.dom.removeNode);\n};\n\n\n/**\n * Merges style properties from `styleDeclaration` into\n * `element.style`.\n * @param {!Element} element\n * @param {!CSSStyleDeclaration} styleDeclaration\n * @private\n */\ngoog.html.sanitizer.CssSanitizer.mergeStyleDeclarations_ = function(\n    element, styleDeclaration) {\n  'use strict';\n  var existingPropNames =\n      goog.html.sanitizer.CssSanitizer.getCssPropNames_(element.style);\n  var newPropNames =\n      goog.html.sanitizer.CssSanitizer.getCssPropNames_(styleDeclaration);\n\n  newPropNames.forEach(function(propName) {\n    'use strict';\n    if (existingPropNames.indexOf(propName) >= 0) {\n      // This was either a property set by the style attribute or a stylesheet\n      // rule with a higher priority. Leave the existing value.\n      return;\n    }\n    var propValue = goog.html.sanitizer.noclobber.getCssPropertyValue(\n        styleDeclaration, propName);\n    goog.html.sanitizer.noclobber.setCssProperty(\n        element.style, propName, propValue);\n  });\n};\n\n\n/**\n * Creates an DOM Document object that will not execute scripts or make\n * network requests while parsing HTML.\n * @return {!Document}\n * @private\n */\ngoog.html.sanitizer.CssSanitizer.createInertDocument_ = function() {\n  'use strict';\n  // Documents created using window.document.implementation.createHTMLDocument()\n  // use the same custom component registry as their parent document. This means\n  // that parsing arbitrary HTML can result in calls to user-defined JavaScript.\n  // This is worked around by creating a template element and its content's\n  // document. See https://github.com/cure53/DOMPurify/issues/47.\n  var doc = document;\n  if (typeof HTMLTemplateElement === 'function') {\n    doc =\n        goog.dom.createElement(goog.dom.TagName.TEMPLATE).content.ownerDocument;\n  }\n  return doc.implementation.createHTMLDocument('');\n};\n\n\n/**\n * Provides a cross-browser way to get a CSS property names.\n * @param {!CSSStyleDeclaration} cssStyle A CSS style object.\n * @return {!Array<string>} CSS property names.\n * @private\n */\ngoog.html.sanitizer.CssSanitizer.getCssPropNames_ = function(cssStyle) {\n  'use strict';\n  var propNames = [];\n  if (goog.isArrayLike(cssStyle)) {\n    // Gets property names via item().\n    // https://drafts.csswg.org/cssom/#dom-cssstyledeclaration-item\n    propNames = goog.array.toArray(cssStyle);\n  } else {\n    // In IE8 and other older browsers we have to iterate over all the property\n    // names. We skip cssText because it contains the unsanitized CSS, which\n    // defeats the purpose.\n    propNames = goog.object.getKeys(cssStyle);\n    goog.array.remove(propNames, 'cssText');\n  }\n  return propNames;\n};\n\n\n/**\n * Checks whether the property name specified should be disallowed.\n * @param {string} propName A property name.\n * @return {boolean} Whether the property name is disallowed.\n * @private\n */\ngoog.html.sanitizer.CssSanitizer.isDisallowedPropertyName_ = function(\n    propName) {\n  'use strict';\n  // getPropertyValue doesn't deal with custom variables properly and will NOT\n  // decode CSS escapes (but the browser will do so silently). Simply disallow\n  // custom variables (http://www.w3.org/TR/css-variables/#defining-variables).\n  return goog.string.startsWith(propName, '--') ||\n      goog.string.startsWith(propName, 'var');\n};\n"],
"names":["goog","provide","require","html","sanitizer","CssSanitizer","SELECTOR_REGEX_","userAgent","IE","document","documentMode","RegExp","CHROME_INCLUDE_VENDOR_PREFIX_WHITELIST_","object","createSet","withoutVendorPrefix_","goog.html.sanitizer.CssSanitizer.withoutVendorPrefix_","propName","WEBKIT","replace","sanitizeStyleSheet_","goog.html.sanitizer.CssSanitizer.sanitizeStyleSheet_","cssStyleSheet","containerId","uriRewriter","sanitizedRules","cssRules","getOnlyStyleRules_","array","toArray","forEach","cssRule","test","Error","product","selectorText","scopedSelector","push","SafeStyleSheet","createRule","sanitizeInlineStyle","style","concat","goog.html.sanitizer.CssSanitizer.getOnlyStyleRules_","filter","CSSStyleRule","type","CSSRule","STYLE_RULE","sanitizeStyleSheetString","goog.html.sanitizer.CssSanitizer.sanitizeStyleSheetString","textContent","opt_containerId","opt_uriRewriter","styleTag","safeParseHtmlAndGetInertElement","sheet","EMPTY","undefined","goog.html.sanitizer.CssSanitizer.safeParseHtmlAndGetInertElement","isVersionOrHigher","global","DOMParser","safeHtml","uncheckedconversions","safeHtmlFromStringKnownToSatisfyTypeContract","string","Const","from","dom","safe","parseFromStringHtml","body","children","goog.html.sanitizer.CssSanitizer.sanitizeInlineStyle","cssStyle","SafeStyle","cleanCssStyle","createElement","cssPropNames","getCssPropNames_","propNameWithoutPrefix","isDisallowedPropertyName_","propValue","noclobber","getCssPropertyValue","sanitizedValue","CssPropertySanitizer","sanitizeProperty","setCssProperty","safeStyleFromStringKnownToSatisfyTypeContract","cssText","sanitizeInlineStyleString","goog.html.sanitizer.CssSanitizer.sanitizeInlineStyleString","div","createInertDocument_","inlineStyleRules","goog.html.sanitizer.CssSanitizer.inlineStyleRules","element","styleTags","getElementsByTagName","concatMap","getElementStyleSheet","sort","a","b","aSpecificity","CssSpecificity","getSpecificity","bSpecificity","compare3","subTreeWalker","createTreeWalker","NodeFilter","SHOW_ELEMENT","currentElement","nextNode","rule","elementMatches","mergeStyleDeclarations_","removeNode","goog.html.sanitizer.CssSanitizer.mergeStyleDeclarations_","styleDeclaration","existingPropNames","newPropNames","indexOf","goog.html.sanitizer.CssSanitizer.createInertDocument_","doc","HTMLTemplateElement","TagName","TEMPLATE","content","ownerDocument","implementation","createHTMLDocument","goog.html.sanitizer.CssSanitizer.getCssPropNames_","propNames","isArrayLike","getKeys","remove","goog.html.sanitizer.CssSanitizer.isDisallowedPropertyName_","startsWith"]
}
