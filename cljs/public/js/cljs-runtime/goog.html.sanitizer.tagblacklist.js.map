{
"version":3,
"file":"goog.html.sanitizer.tagblacklist.js",
"lineCount":3,
"mappings":"AAWAA,IAAKC,CAAAA,OAAL,CAAa,kCAAb,CAAA;AAaAD,IAAKE,CAAAA,IAAKC,CAAAA,SAAUC,CAAAA,YAApB,GAAmC,CACjC,SAAU,IADuB,EAEjC,QAAS,IAFwB,EAGjC,OAAQ,IAHyB,EAIjC,UAAW,IAJsB,EAKjC,QAAS,IALwB,EAOjC,OAAQ,IAPyB,EASjC,SAAU,IATuB,EAWjC,UAAW,IAXsB,EAajC,SAAU,IAbuB,EAcjC,QAAS,IAdwB,EAejC,OAAQ,IAfyB,EAgBjC,OAAQ,IAhByB,EAiBjC,SAAU,IAjBuB,EAkBjC,SAAU,IAlBuB,EAqBjC,MAAO,IArB0B,EAuBjC,QAAS,IAvBwB,EA0BjC,WAAY,IA1BqB,EA2BjC,QAAS,IA3BwB,CAAnC;;",
"sources":["goog/html/sanitizer/tagblacklist.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n\n/**\n * @fileoverview Contains the tag blacklist for use in the Html sanitizer.\n */\n\ngoog.provide('goog.html.sanitizer.TagBlacklist');\n\n\n/**\n * A list of tags which should be removed entirely from the DOM, rather than\n * merely being made inert. In that sense, this is not a \"true\" blacklist\n * because removing a tag here without adding it to the whitelist does not have\n * security implications. Tag names must be in all caps. Note that even if\n * TEMPLATE is removed from this blacklist (or even whitelisted) it will\n * continue to be removed from the HTML, as TEMPLATE is used interally to\n * denote nodes which should not be added to the sanitized HTML.\n * @const @dict {boolean}\n */\ngoog.html.sanitizer.TagBlacklist = {\n  'APPLET': true,\n  'AUDIO': true,\n  'BASE': true,\n  'BGSOUND': true,\n  'EMBED': true,\n  // Blacklisted by default, can be allowed using allowFormTag.\n  'FORM': true,\n  // NOTE: can remove this for old browser behavior\n  'IFRAME': true,\n  // Can result in network requests\n  'ISINDEX': true,\n  // Unused and just unnecessarily increase attack surface\n  'KEYGEN': true,\n  'LAYER': true,\n  'LINK': true,\n  'META': true,\n  'OBJECT': true,\n  'SCRIPT': true,\n  // Can result in an XSS in FF\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1205631\n  'SVG': true,\n  // Blacklisted by default, can be allowed using allowStyleTag.\n  'STYLE': true,\n  // Unsafe in most cases, and sanitizing its contents is not supported by the\n  // underlying SafeDomTreeProcessor.\n  'TEMPLATE': true,\n  'VIDEO': true\n};\n"],
"names":["goog","provide","html","sanitizer","TagBlacklist"]
}
