{
"version":3,
"file":"goog.html.sanitizer.noclobber.js",
"lineCount":145,
"mappings":"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",
"sources":["goog/html/sanitizer/noclobber.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Utility DOM functions resistant to DOM clobbering. Clobbering\n * resistance is offered as a best-effort feature -- it is not available on\n * older browsers such as IE <10, Chrome <43, etc. In some cases, we can at\n * least detect clobbering attempts and abort. Note that this is not intended to\n * be a general-purpose library -- it is only used by the HTML sanitizer to\n * accept and sanitize clobbered input. If your projects needs to protect\n * against clobbered content, consider using the HTML sanitizer and configuring\n * it to defuse clobbering by prefixing all element ids and names in the\n * output.\n * @supported Unless specified in the method documentation, IE 10 and newer.\n */\n\ngoog.module('goog.html.sanitizer.noclobber');\ngoog.module.declareLegacyNamespace();\n\nvar NodeType = goog.require('goog.dom.NodeType');\nvar googAsserts = goog.require('goog.asserts');\nvar userAgentProduct = goog.require('goog.userAgent.product');\n\n/**\n * Note about browser support:\n * - IE 8 and 9 don't have DOM prototypes. There is no simple way of saving\n *   the methods and accessors for a clobber-safe call.\n * - Chrome <43 doesn't have attributes on DOM prototypes, so there is no way of\n *   making clobber-safe calls for attribute descriptors.\n * - IE 8 and 9 don't even have Node and HTMLElement, so there is no\n *   straightforward way of checking if the result was clobbered for many of the\n *   methods.\n * - IE 8 and 9 have alternate names for getPropertyValue/setProperty in\n *   CSSStyleDeclaration.\n * For simplicity, we don't support IE 8 and 9 for anything but the CSS methods\n * which already had IE8 and IE9 support. Chrome 41 must still be supported.\n */\n\n/**\n * Shorthand for `Object.getOwnPropertyDescriptor(...).get` to improve\n * readability during initialization of `Methods`.\n * @param {string} className\n * @param {string} property\n * @return {?Function}\n */\nfunction getterOrNull(className, property) {\n  var ctor = goog.global[className];\n  if (!ctor || !ctor.prototype) {\n    return null;\n  }\n  var descriptor = Object.getOwnPropertyDescriptor(ctor.prototype, property);\n  return (descriptor && descriptor.get) || null;\n}\n\n/**\n * Shorthand for `DOMInterface.prototype.method` to improve readability\n * during initialization of `Methods`.\n * @param {string} className\n * @param {string} method\n * @return {?Function}\n */\nfunction prototypeMethodOrNull(className, method) {\n  var ctor = goog.global[className];\n  return (ctor && ctor.prototype && ctor.prototype[method]) || null;\n}\n\n// Functions we use to avoid looking up the prototypes and the descriptors\n// multiple times.\n/** @const @enum {?Function} */\nvar Methods = {\n  ATTRIBUTES_GETTER: getterOrNull('Element', 'attributes') ||\n      // Edge and IE10 define this Element property on Node instead of\n      // Element.\n      getterOrNull('Node', 'attributes'),\n  HAS_ATTRIBUTE: prototypeMethodOrNull('Element', 'hasAttribute'),\n  GET_ATTRIBUTE: prototypeMethodOrNull('Element', 'getAttribute'),\n  SET_ATTRIBUTE: prototypeMethodOrNull('Element', 'setAttribute'),\n  REMOVE_ATTRIBUTE: prototypeMethodOrNull('Element', 'removeAttribute'),\n  INNER_HTML_GETTER: getterOrNull('Element', 'innerHTML') ||\n      // IE 10 defines this Element property on HTMLElement.\n      getterOrNull('HTMLElement', 'innerHTML'),\n  GET_ELEMENTS_BY_TAG_NAME:\n      prototypeMethodOrNull('Element', 'getElementsByTagName'),\n  MATCHES: prototypeMethodOrNull('Element', 'matches') ||\n      prototypeMethodOrNull('Element', 'msMatchesSelector'),\n  NODE_NAME_GETTER: getterOrNull('Node', 'nodeName'),\n  NODE_TYPE_GETTER: getterOrNull('Node', 'nodeType'),\n  PARENT_NODE_GETTER: getterOrNull('Node', 'parentNode'),\n  CHILD_NODES_GETTER: getterOrNull('Node', 'childNodes'),\n  APPEND_CHILD: prototypeMethodOrNull('Node', 'appendChild'),\n  STYLE_GETTER: getterOrNull('HTMLElement', 'style') ||\n      // Safari 10 defines the property on Element instead of\n      // HTMLElement.\n      getterOrNull('Element', 'style'),\n  SHEET_GETTER: getterOrNull('HTMLStyleElement', 'sheet'),\n  GET_PROPERTY_VALUE:\n      prototypeMethodOrNull('CSSStyleDeclaration', 'getPropertyValue'),\n  SET_PROPERTY: prototypeMethodOrNull('CSSStyleDeclaration', 'setProperty'),\n  NAMESPACE_URI_GETTER: getterOrNull('Element', 'namespaceURI') ||\n      // Edge and IE10 define this Element property on Node instead of\n      // Element.\n      getterOrNull('Node', 'namespaceURI'),\n};\n\n/**\n * Calls the provided DOM property descriptor and returns its result. If the\n * descriptor is not available, use fallbackPropertyName to get the property\n * value in a clobber-vulnerable way, and use fallbackTest to check if the\n * property was clobbered, throwing an exception if so.\n * @param {?Function} fn\n * @param {*} object\n * @param {string} fallbackPropertyName\n * @param {function(*):boolean} fallbackTest\n * @return {?}\n */\nfunction genericPropertyGet(fn, object, fallbackPropertyName, fallbackTest) {\n  if (fn) {\n    return fn.apply(object);\n  }\n  var propertyValue = object[fallbackPropertyName];\n  if (!fallbackTest(propertyValue)) {\n    throw new Error('Clobbering detected');\n  }\n  return propertyValue;\n}\n\n/**\n * Calls the provided DOM prototype method and returns its result. If the\n * method is not available, use fallbackMethodName to call the method in a\n * clobber-vulnerable way, and use fallbackTest to check if the\n * method was clobbered, throwing an exception if so.\n * @param {?Function} fn\n * @param {*} object\n * @param {string} fallbackMethodName\n * @param {!Array<*>} args\n * @return {?}\n */\nfunction genericMethodCall(fn, object, fallbackMethodName, args) {\n  if (fn) {\n    return fn.apply(object, args);\n  }\n  // IE8 and IE9 will return 'object' for\n  // CSSStyleDeclaration.(get|set)Attribute, so we can't use typeof.\n  if (userAgentProduct.IE && document.documentMode < 10) {\n    if (!object[fallbackMethodName].call) {\n      throw new Error('IE Clobbering detected');\n    }\n  } else if (typeof object[fallbackMethodName] != 'function') {\n    throw new Error('Clobbering detected');\n  }\n  return object[fallbackMethodName].apply(object, args);\n}\n\n/**\n * Returns an element's attributes without falling prey to things like\n * <form><input name=\"attributes\"></form>. Equivalent to\n * `node.attributes`.\n * @param {!Element} element\n * @return {!NamedNodeMap}\n */\nfunction getElementAttributes(element) {\n  return genericPropertyGet(\n      Methods.ATTRIBUTES_GETTER, element, 'attributes', function(attributes) {\n        return attributes instanceof NamedNodeMap;\n      });\n}\n\n/**\n * Returns whether an element has a specific attribute, without falling prey to\n * things like <form><input name=\"hasAttribute\"></form>.\n * Equivalent to {@code element.hasAttribute(\"foo\")}.\n * @param {!Element} element\n * @param {string} attrName\n * @return {boolean}\n */\nfunction hasElementAttribute(element, attrName) {\n  return genericMethodCall(\n      Methods.HAS_ATTRIBUTE, element, 'hasAttribute', [attrName]);\n}\n\n/**\n * Returns a specific attribute from an element without falling prey to\n * things like <form><input name=\"getAttribute\"></form>.\n * Equivalent to {@code element.getAttribute(\"foo\")}.\n * @param {!Element} element\n * @param {string} attrName\n * @return {?string}\n */\nfunction getElementAttribute(element, attrName) {\n  // Older browsers might return empty string instead of null to follow the\n  // DOM 3 Core Specification.\n  return genericMethodCall(\n             Methods.GET_ATTRIBUTE, element, 'getAttribute', [attrName]) ||\n      null;\n}\n\n/**\n * Sets an element's attributes without falling prey to things like\n * <form><input name=\"setAttribute\"></form>. Equivalent to {@code\n * element.setAttribute(\"foo\", \"bar\")}.\n * @param {!Element} element\n * @param {string} name\n * @param {string} value\n */\nfunction setElementAttribute(element, name, value) {\n  try {\n    genericMethodCall(\n        Methods.SET_ATTRIBUTE, element, 'setAttribute', [name, value]);\n  } catch (e) {\n    // IE throws an exception if the src attribute contains HTTP credentials.\n    // However the attribute gets set anyway.\n    if (e.message.indexOf('A security problem occurred') != -1) {\n      return;\n    }\n    throw e;\n  }\n}\n\n/**\n * Deletes a specific attribute from an element without falling prey to\n * things like <form><input name=\"removeAttribute\"></form>.\n * Equivalent to {@code element.removeAttribute(\"foo\")}.\n * @param {!Element} element\n * @param {string} attrName\n */\nfunction removeElementAttribute(element, attrName) {\n  genericMethodCall(\n      Methods.REMOVE_ATTRIBUTE, element, 'removeAttribute', [attrName]);\n}\n\n/**\n * Returns a node's innerHTML property value without falling prey to things like\n * <form><input name=\"innerHTML\"></form>. Equivalent to\n * `element.innerHTML`.\n * @param {!Element} element\n * @return {string}\n */\nfunction getElementInnerHTML(element) {\n  return genericPropertyGet(\n      Methods.INNER_HTML_GETTER, element, 'innerHTML', function(html) {\n        return typeof html == 'string';\n      });\n}\n\n/**\n * Returns an element's style without falling prey to things like\n * <form><input name=\"style\"></form>.\n * @param {!Element} element\n * @return {!CSSStyleDeclaration}\n */\nfunction getElementStyle(element) {\n  assertHTMLElement(element);\n  return genericPropertyGet(\n      Methods.STYLE_GETTER, element, 'style', function(style) {\n        return style instanceof CSSStyleDeclaration;\n      });\n}\n\n/**\n * Asserts that the Element is an HTMLElement, or throws an exception.\n * @param {!Element} element\n */\nfunction assertHTMLElement(element) {\n  if (googAsserts.ENABLE_ASSERTS && !(element instanceof HTMLElement)) {\n    throw new Error('Not an HTMLElement');\n  }\n}\n\n/**\n * Get the children of a specific tag matching the provided tag name without\n * falling prey to things like <form><input name=\"getElementsByTagName\"></form>.\n * Equivalent to {@code element.getElementsByTagName(\"foo\")}.\n * @param {!Element} element\n * @param {string} name\n * @return {!Array<!Element>}\n */\nfunction getElementsByTagName(element, name) {\n  return Array.from(genericMethodCall(\n      Methods.GET_ELEMENTS_BY_TAG_NAME, element, 'getElementsByTagName',\n      [name]));\n}\n\n/**\n * Returns an element's style without falling prey to things like\n * <form><input name=\"style\"></form>.\n * @param {!Element} element\n * @return {!CSSStyleSheet}\n */\nfunction getElementStyleSheet(element) {\n  assertHTMLElement(element);\n  return genericPropertyGet(\n      Methods.SHEET_GETTER, element, 'sheet', function(sheet) {\n        return sheet instanceof CSSStyleSheet;\n      });\n}\n\n/**\n * Returns true if the element would be selected by the provided selector,\n * without falling prey to things like <form><input name=\"setAttribute\"></form>.\n * Equivalent to {@code element.matches(\"foo\")}.\n * @param {!Element} element\n * @param {string} selector\n * @return {boolean}\n */\nfunction elementMatches(element, selector) {\n  return genericMethodCall(\n      Methods.MATCHES, element,\n      element.matches ? 'matches' : 'msMatchesSelector', [selector]);\n}\n\n/**\n * Asserts that a Node is an Element, without falling prey to things like\n * <form><input name=\"nodeType\"></form>.\n * @param {!Node} node\n * @return {!Element}\n */\nfunction assertNodeIsElement(node) {\n  if (googAsserts.ENABLE_ASSERTS && !isNodeElement(node)) {\n    googAsserts.fail(\n        'Expected Node of type Element but got Node of type %s',\n        getNodeType(node));\n  }\n  return /** @type {!Element} */ (node);\n}\n\n/**\n * Returns whether the node is an Element, without falling prey to things like\n * <form><input name=\"nodeType\"></form>.\n * @param {!Node} node\n * @return {boolean}\n */\nfunction isNodeElement(node) {\n  return getNodeType(node) == NodeType.ELEMENT;\n}\n\n/**\n * Returns a node's nodeName without falling prey to things like\n * <form><input name=\"nodeName\"></form>.\n * @param {!Node} node\n * @return {string}\n */\nfunction getNodeName(node) {\n  return genericPropertyGet(\n      Methods.NODE_NAME_GETTER, node, 'nodeName', function(name) {\n        return typeof name == 'string';\n      });\n}\n\n/**\n * Returns a node's nodeType without falling prey to things like\n * `<form><input name=\"nodeType\"></form>`.\n * @param {!Node} node\n * @return {number}\n */\nfunction getNodeType(node) {\n  return genericPropertyGet(\n      Methods.NODE_TYPE_GETTER, node, 'nodeType', function(type) {\n        return typeof type == 'number';\n      });\n}\n\n/**\n * Returns a node's parentNode without falling prey to things like\n * <form><input name=\"parentNode\"></form>.\n * @param {!Node} node\n * @return {?Node}\n */\nfunction getParentNode(node) {\n  return genericPropertyGet(\n      Methods.PARENT_NODE_GETTER, node, 'parentNode', function(parentNode) {\n        // We need to ensure that parentNode is returning the actual parent node\n        // and not a child node that happens to have a name of \"parentNode\".\n        // We check that the node returned by parentNode is itself not named\n        // \"parentNode\" - this could happen legitimately but on IE we have no\n        // better means of avoiding the pitfall.\n        return !(\n            parentNode && typeof parentNode.name == 'string' &&\n            parentNode.name && parentNode.name.toLowerCase() == 'parentnode');\n      });\n}\n\n/**\n * Returns the value of node.childNodes without falling prey to things like\n * <form><input name=\"childNodes\"></form>.\n * @param {!Node} node\n * @return {!NodeList<!Node>}\n */\nfunction getChildNodes(node) {\n  return genericPropertyGet(\n      Methods.CHILD_NODES_GETTER, node, 'childNodes', function(childNodes) {\n        return childNodes instanceof NodeList;\n      });\n}\n\n/**\n * Appends a child to a node without falling prey to things like\n * <form><input name=\"appendChild\"></form>.\n * @param {!Node} parent\n * @param {!Node} child\n * @return {!Node}\n */\nfunction appendNodeChild(parent, child) {\n  return genericMethodCall(\n      Methods.APPEND_CHILD, parent, 'appendChild', [child]);\n}\n\n/**\n * Provides a way cross-browser way to get a CSS value from a CSS declaration.\n * @param {!CSSStyleDeclaration} cssStyle A CSS style object.\n * @param {string} propName A property name.\n * @return {string} Value of the property as parsed by the browser.\n * @supported IE8 and newer.\n */\nfunction getCssPropertyValue(cssStyle, propName) {\n  return genericMethodCall(\n             Methods.GET_PROPERTY_VALUE, cssStyle,\n             cssStyle.getPropertyValue ? 'getPropertyValue' : 'getAttribute',\n             [propName]) ||\n      '';\n}\n\n/**\n * Provides a cross-browser way to set a CSS value on a CSS declaration.\n * @param {!CSSStyleDeclaration} cssStyle A CSS style object.\n * @param {string} propName A property name.\n * @param {string} sanitizedValue Sanitized value of the property to be set\n *     on the CSS style object.\n * @supported IE8 and newer.\n */\nfunction setCssProperty(cssStyle, propName, sanitizedValue) {\n  genericMethodCall(\n      Methods.SET_PROPERTY, cssStyle,\n      cssStyle.setProperty ? 'setProperty' : 'setAttribute',\n      [propName, sanitizedValue]);\n}\n\n/**\n * Returns an element's namespace URI without falling prey to things like\n * <form><input name=\"namespaceURI\"></form>.\n * @param {!Element} element\n * @return {string}\n */\nfunction getElementNamespaceURI(element) {\n  return genericPropertyGet(\n      Methods.NAMESPACE_URI_GETTER, element, 'namespaceURI',\n      function(namespaceURI) {\n        return typeof namespaceURI == 'string';\n      });\n}\n\nexports = {\n  getElementAttributes: getElementAttributes,\n  hasElementAttribute: hasElementAttribute,\n  getElementAttribute: getElementAttribute,\n  setElementAttribute: setElementAttribute,\n  removeElementAttribute: removeElementAttribute,\n  getElementInnerHTML: getElementInnerHTML,\n  getElementStyle: getElementStyle,\n  getElementsByTagName: getElementsByTagName,\n  getElementStyleSheet: getElementStyleSheet,\n  elementMatches: elementMatches,\n  assertNodeIsElement: assertNodeIsElement,\n  isNodeElement: isNodeElement,\n  getNodeName: getNodeName,\n  getNodeType: getNodeType,\n  getParentNode: getParentNode,\n  getChildNodes: getChildNodes,\n  appendNodeChild: appendNodeChild,\n  getCssPropertyValue: getCssPropertyValue,\n  setCssProperty: setCssProperty,\n  getElementNamespaceURI: getElementNamespaceURI,\n  /** @package */\n  Methods: Methods,\n};\n"],
"names":["goog","module","declareLegacyNamespace","NodeType","require","googAsserts","userAgentProduct","getterOrNull","className","property","ctor","global","prototype","descriptor","Object","getOwnPropertyDescriptor","get","prototypeMethodOrNull","method","Methods","ATTRIBUTES_GETTER","HAS_ATTRIBUTE","GET_ATTRIBUTE","SET_ATTRIBUTE","REMOVE_ATTRIBUTE","INNER_HTML_GETTER","GET_ELEMENTS_BY_TAG_NAME","MATCHES","NODE_NAME_GETTER","NODE_TYPE_GETTER","PARENT_NODE_GETTER","CHILD_NODES_GETTER","APPEND_CHILD","STYLE_GETTER","SHEET_GETTER","GET_PROPERTY_VALUE","SET_PROPERTY","NAMESPACE_URI_GETTER","genericPropertyGet","fn","object","fallbackPropertyName","fallbackTest","apply","propertyValue","Error","genericMethodCall","fallbackMethodName","args","IE","document","documentMode","call","getElementAttributes","element","attributes","NamedNodeMap","hasElementAttribute","attrName","getElementAttribute","setElementAttribute","name","value","e","message","indexOf","removeElementAttribute","getElementInnerHTML","html","getElementStyle","assertHTMLElement","style","CSSStyleDeclaration","ENABLE_ASSERTS","HTMLElement","getElementsByTagName","Array","from","getElementStyleSheet","sheet","CSSStyleSheet","elementMatches","selector","matches","assertNodeIsElement","node","isNodeElement","fail","getNodeType","ELEMENT","getNodeName","type","getParentNode","parentNode","toLowerCase","getChildNodes","childNodes","NodeList","appendNodeChild","parent","child","getCssPropertyValue","cssStyle","propName","getPropertyValue","setCssProperty","sanitizedValue","setProperty","getElementNamespaceURI","namespaceURI","exports"]
}
