["^ ","~:output",["^ ","~:js","goog.provide('tiltontec.cell.core');\ntiltontec.cell.core.make_cell = (function tiltontec$cell$core$make_cell(var_args){\nvar args__4870__auto__ = [];\nvar len__4864__auto___29405 = arguments.length;\nvar i__4865__auto___29406 = (0);\nwhile(true){\nif((i__4865__auto___29406 < len__4864__auto___29405)){\nargs__4870__auto__.push((arguments[i__4865__auto___29406]));\n\nvar G__29413 = (i__4865__auto___29406 + (1));\ni__4865__auto___29406 = G__29413;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4871__auto__ = ((((0) < args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\nreturn tiltontec.cell.core.make_cell.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\n});\n\n(tiltontec.cell.core.make_cell.cljs$core$IFn$_invoke$arity$variadic = (function (kvs){\nvar options = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,kvs);\nreturn cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"callers\",\"callers\",-1991542784),new cljs.core.Keyword(null,\"value\",\"value\",305978217),new cljs.core.Keyword(null,\"ephemeral?\",\"ephemeral?\",-311673012),new cljs.core.Keyword(null,\"synapses\",\"synapses\",-614206130),new cljs.core.Keyword(null,\"pulse-observed\",\"pulse-observed\",595719633),new cljs.core.Keyword(null,\"lazy\",\"lazy\",-424547181),new cljs.core.Keyword(null,\"pulse-last-changed\",\"pulse-last-changed\",1035703380),new cljs.core.Keyword(\"tiltontec.cell.base\",\"state\",\"tiltontec.cell.base/state\",-1967920396),new cljs.core.Keyword(null,\"pulse\",\"pulse\",-244494476),new cljs.core.Keyword(null,\"input?\",\"input?\",-1792843173)],[cljs.core.PersistentHashSet.EMPTY,tiltontec.cell.base.unbound,false,cljs.core.PersistentHashSet.EMPTY,(0),false,(0),new cljs.core.Keyword(null,\"nascent\",\"nascent\",443401807),(0),true]),options], 0)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(\"tiltontec.cell.base\",\"cell\",\"tiltontec.cell.base/cell\",608738071)], null)], 0));\n}));\n\n(tiltontec.cell.core.make_cell.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(tiltontec.cell.core.make_cell.cljs$lang$applyTo = (function (seq29366){\nvar self__4852__auto__ = this;\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq29366));\n}));\n\ntiltontec.cell.core.make_c_formula = (function tiltontec$cell$core$make_c_formula(var_args){\nvar args__4870__auto__ = [];\nvar len__4864__auto___29417 = arguments.length;\nvar i__4865__auto___29418 = (0);\nwhile(true){\nif((i__4865__auto___29418 < len__4864__auto___29417)){\nargs__4870__auto__.push((arguments[i__4865__auto___29418]));\n\nvar G__29421 = (i__4865__auto___29418 + (1));\ni__4865__auto___29418 = G__29421;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4871__auto__ = ((((0) < args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\nreturn tiltontec.cell.core.make_c_formula.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\n});\n\n(tiltontec.cell.core.make_c_formula.cljs$core$IFn$_invoke$arity$variadic = (function (kvs){\nvar options = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,kvs);\nvar rule = new cljs.core.Keyword(null,\"rule\",\"rule\",729973257).cljs$core$IFn$_invoke$arity$1(options);\nif(cljs.core.truth_(rule)){\n} else {\nthrow (new Error(\"Assert failed: rule\"));\n}\n\nif(cljs.core.fn_QMARK_(rule)){\n} else {\nthrow (new Error(\"Assert failed: (fn? rule)\"));\n}\n\nreturn cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"callers\",\"callers\",-1991542784),new cljs.core.Keyword(null,\"value\",\"value\",305978217),new cljs.core.Keyword(null,\"ephemeral?\",\"ephemeral?\",-311673012),new cljs.core.Keyword(null,\"pulse-observed\",\"pulse-observed\",595719633),new cljs.core.Keyword(null,\"lazy\",\"lazy\",-424547181),new cljs.core.Keyword(null,\"pulse-last-changed\",\"pulse-last-changed\",1035703380),new cljs.core.Keyword(\"tiltontec.cell.base\",\"state\",\"tiltontec.cell.base/state\",-1967920396),new cljs.core.Keyword(null,\"pulse\",\"pulse\",-244494476),new cljs.core.Keyword(null,\"useds\",\"useds\",621350967),new cljs.core.Keyword(null,\"optimize\",\"optimize\",-1912349448),new cljs.core.Keyword(null,\"input?\",\"input?\",-1792843173)],[cljs.core.PersistentHashSet.EMPTY,tiltontec.cell.base.unbound,false,(0),false,(0),new cljs.core.Keyword(null,\"nascent\",\"nascent\",443401807),(0),cljs.core.PersistentHashSet.EMPTY,true,false]),options], 0)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(\"tiltontec.cell.base\",\"c-formula\",\"tiltontec.cell.base/c-formula\",-1020749037)], null)], 0));\n}));\n\n(tiltontec.cell.core.make_c_formula.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(tiltontec.cell.core.make_c_formula.cljs$lang$applyTo = (function (seq29369){\nvar self__4852__auto__ = this;\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq29369));\n}));\n\ntiltontec.cell.core.cI = (function tiltontec$cell$core$cI(var_args){\nvar args__4870__auto__ = [];\nvar len__4864__auto___29428 = arguments.length;\nvar i__4865__auto___29429 = (0);\nwhile(true){\nif((i__4865__auto___29429 < len__4864__auto___29428)){\nargs__4870__auto__.push((arguments[i__4865__auto___29429]));\n\nvar G__29432 = (i__4865__auto___29429 + (1));\ni__4865__auto___29429 = G__29432;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4871__auto__ = ((((1) < args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((1)),(0),null)):null);\nreturn tiltontec.cell.core.cI.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4871__auto__);\n});\n\n(tiltontec.cell.core.cI.cljs$core$IFn$_invoke$arity$variadic = (function (value,option_kvs){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(tiltontec.cell.core.make_cell,new cljs.core.Keyword(null,\"value\",\"value\",305978217),value,new cljs.core.Keyword(null,\"input?\",\"input?\",-1792843173),true,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([option_kvs], 0));\n}));\n\n(tiltontec.cell.core.cI.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(tiltontec.cell.core.cI.cljs$lang$applyTo = (function (seq29376){\nvar G__29377 = cljs.core.first(seq29376);\nvar seq29376__$1 = cljs.core.next(seq29376);\nvar self__4851__auto__ = this;\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__29377,seq29376__$1);\n}));\n\ntiltontec.cell.core.cset_BANG__GT_ = (function tiltontec$cell$core$cset_BANG__GT_(c,new_value){\n\nif(cljs.core.truth_(c)){\n} else {\nthrow (new Error(\"Assert failed: c\"));\n}\n\nif(cljs.core.truth_(tiltontec.cell.base._STAR_defer_changes_STAR_)){\nreturn cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"c-reset-rejecting-undeferred!\",\"c-reset-rejecting-undeferred!\",1674321026),tiltontec.cell.base.c_slot(c)], 0));\n} else {\nif(cljs.core.truth_(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([tiltontec.cell.base.c_lazy(c)]),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"once-asked\",\"once-asked\",-1758934854),new cljs.core.Keyword(null,\"always\",\"always\",-1772028770),true], null)))){\nreturn tiltontec.cell.evaluate.c_value_assume(c,new_value,null);\n} else {\nreturn tiltontec.cell.integrity.call_with_integrity(new cljs.core.Keyword(null,\"change\",\"change\",-1163046502),tiltontec.cell.base.c_slot(c),(function (opcode,defer_info){\nreturn tiltontec.cell.evaluate.c_value_assume(c,new_value,null);\n}));\n\n}\n}\n});\ntiltontec.cell.core.c_reset_BANG_ = (function tiltontec$cell$core$c_reset_BANG_(c,new_value){\nreturn tiltontec.cell.core.cset_BANG__GT_(c,new_value);\n});\ntiltontec.cell.core.cswap_BANG__GT_ = (function tiltontec$cell$core$cswap_BANG__GT_(var_args){\nvar args__4870__auto__ = [];\nvar len__4864__auto___29435 = arguments.length;\nvar i__4865__auto___29436 = (0);\nwhile(true){\nif((i__4865__auto___29436 < len__4864__auto___29435)){\nargs__4870__auto__.push((arguments[i__4865__auto___29436]));\n\nvar G__29437 = (i__4865__auto___29436 + (1));\ni__4865__auto___29436 = G__29437;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4871__auto__ = ((((2) < args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((2)),(0),null)):null);\nreturn tiltontec.cell.core.cswap_BANG__GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4871__auto__);\n});\n\n(tiltontec.cell.core.cswap_BANG__GT_.cljs$core$IFn$_invoke$arity$variadic = (function (c,swap_fn,swap_fn_args){\nreturn tiltontec.cell.core.cset_BANG__GT_(c,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(swap_fn,tiltontec.cell.evaluate._LT_cget(c),swap_fn_args));\n}));\n\n(tiltontec.cell.core.cswap_BANG__GT_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(tiltontec.cell.core.cswap_BANG__GT_.cljs$lang$applyTo = (function (seq29396){\nvar G__29397 = cljs.core.first(seq29396);\nvar seq29396__$1 = cljs.core.next(seq29396);\nvar G__29398 = cljs.core.first(seq29396__$1);\nvar seq29396__$2 = cljs.core.next(seq29396__$1);\nvar self__4851__auto__ = this;\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__29397,G__29398,seq29396__$2);\n}));\n\ntiltontec.cell.core.call_c_reset_next_BANG_ = (function tiltontec$cell$core$call_c_reset_next_BANG_(c,new_value){\nif(cljs.core.truth_(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([tiltontec.cell.base.c_lazy(c)]),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"once-asked\",\"once-asked\",-1758934854),new cljs.core.Keyword(null,\"always\",\"always\",-1772028770),true], null)))){\nreturn tiltontec.cell.evaluate.c_value_assume(c,new_value,null);\n} else {\nreturn tiltontec.cell.evaluate.c_value_assume(c,new_value,null);\n\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","tiltontec/cell/core.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",24],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$fn-obs","~$tiltontec.cell.observer","~$wtrx","~$tiltontec.util.base","~$with-integrity","~$tiltontec.cell.integrity","~$def-rmap-slots","^F","~$*trx?*","^F","~$trx","^F","~$def-rmap-meta-slots","^F","~$without-c-dependency","~$tiltontec.cell.base","~$prog1","^F"],"~:excludes",["~#set",[]],"~:name","~$tiltontec.cell.core","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","^D","^D","^N","^N","~$tiltontec.util.core","^Y","~$cty","^N","~$cljs.core","^[","~$goog","^10","~$tiltontec.cell.evaluate","^11","^?","^?","^F","^F","^H","^H"],"~:seen",["^Q",["~:require"]],"~:uses",["^ ","~$caller-ensure","^N","~$*not-to-be*","^N","~$pprint","^?","~$caller-drop","^N","~$c-input?","^N","~$c-synaptic?","^N","~$c-synapses","^N","~$c-value-state","^N","~$c-optimized-away?","^N","~$unbound","^N","~$c-optimize","^N","~$c-valid?","^N","~$*causation*","^N","~$*defer-changes*","^N","~$c-pulse","^N","~$record-dependency","^11","~$+pulse+","^N","~$c-pulse-last-changed","^N","~$md-ref?","^N","~$ensure-value-is-current","^11","~$c-value","^N","~$mdead?","^N","~$c-get","^11","~$c-callers","^N","~$cl-format","^?","~$c-ephemeral?","^N","~$c-ref?","^N","~$c-value-assume","^11","~$c-model","^N","~$c-pulse-observed","^N","~$c-slot","^N","~$c-rule","^N","~$unlink-from-callers","^N","~$<cget","^11","~$c-formula?","^N","~$c-me","^N","~$c-lazy","^N","~$md-slot-owning?","^N","~$c-useds","^N","~$*call-stack*","^N","~$*c-prop-depth*","^N","~$c-unbound?","^N","~$*depender*","^N","~$rmap-setf","^Y","~$c-state","^N"],"~:require-macros",["^ ","^F","^F","^N","^N","^Z","^N","^D","^D","^H","^H","^[","^[","^?","^?"],"~:form",["~#list",["~$ns","^S",["^28",["^13",["^Y","~:refer",["^24"]],["^F","~:refer-macros",["^K","^E","^O","^J","^I","^L"]],["^N","^2;",["^M"],"^2:",["^1=","^1W","^1I","^1?","^22","^19","^1>","^1Q","^1J","^1@","^1[","^1O","^1G","^25","^1E","^1R","^20","^1B","^1T","^1X","^1<","^1L","^15","^1;","^1U","^1A","^1:","^18","^1C","^1F","^1N","^1S","^23","^16","^21","^1Z","^1Y"],"~:as","^Z"],["^D","^2;",["^C"],"^2:",[]],["^?","^2:",["^17","^1M"]],["^H","^2;",["^G"],"^2:",[]],["^11","^2:",["^1K","^1V","^1P","^1D","^1H"]]]]]],"~:flags",["^ ","^13",["^Q",[]]],"~:js-deps",["^ "],"~:deps",["^10","^[","^Y","^F","^N","^D","^?","^H","^11"]],"^V","^S","~:resource-id",["~:shadow.build.classpath/resource","tiltontec/cell/core.cljc"],"~:compiled-at",1645592439627,"^T",["^ ","^D","^D","^N","^N","^Y","^Y","^Z","^N","^[","^[","^10","^10","^11","^11","^?","^?","^F","^F","^H","^H"],"~:resource-name","tiltontec/cell/core.cljc","~:warnings",[],"~:source","(ns tiltontec.cell.core\n  (:require\n\n    [tiltontec.util.core :refer [rmap-setf]]\n    ;#?(:clj [taoensso.tufte :as tufte :refer :all]\n    ;   :cljs [taoensso.tufte :as tufte :refer-macros [defnp p profiled profile]])\n    #?(:cljs [tiltontec.util.base\n              :refer-macros [trx wtrx prog1 *trx?* def-rmap-slots def-rmap-meta-slots]]\n       :clj [tiltontec.util.base :refer :all])\n\n    #?(:clj [tiltontec.cell.base :refer :all :as cty]\n       :cljs [tiltontec.cell.base\n              :refer-macros [without-c-dependency]\n              :refer [c-optimized-away? c-formula? c-value c-optimize\n                      c-unbound? c-input? unbound\n                      c-model mdead? c-valid? c-useds c-ref? md-ref?\n                      c-state +pulse+ c-pulse-observed\n                      *call-stack* *defer-changes*\n                      c-rule c-me c-value-state c-callers caller-ensure\n                      c-synapses\n                      unlink-from-callers *causation*\n                      c-synaptic? caller-drop\n                      c-pulse c-pulse-last-changed c-ephemeral? c-slot\n                      *depender* *not-to-be*\n                      *c-prop-depth* md-slot-owning? c-lazy] :as cty])\n\n    #?(:clj\n    [tiltontec.cell.observer :refer :all]\n       :cljs [tiltontec.cell.observer\n              :refer-macros [fn-obs]\n              :refer []])\n\n    [#?(:cljs cljs.pprint :clj clojure.pprint) :refer [pprint cl-format]]\n    #?(:clj\n    [tiltontec.cell.integrity :refer :all]\n       :cljs [tiltontec.cell.integrity\n              :refer-macros [with-integrity]\n              :refer []])\n    [tiltontec.cell.evaluate :refer [c-get <cget c-value-assume\n                                     record-dependency ensure-value-is-current]]))\n\n;;#?(:cljs (set! *print-level* 3))\n\n; todo: stand-alone cells with observers should be observed when they are made\n\n(defn make-cell [& kvs]\n  (let [options (apply hash-map kvs)]\n    (#?(:clj ref :cljs atom) (merge {:value unbound\n                                     ::cty/state :nascent\n                                     :pulse 0\n                                     :pulse-last-changed 0\n                                     :pulse-observed 0\n                                     :callers #{}\n                                     :synapses #{}          ;; these stay around between evaluations\n                                     ;; todo: if a rule branches away from a synapse\n                                     ;;       it needs to be GCed so it starts fresh\n                                     :lazy false            ;; not a predicate (can hold, inter alia, :until-asked)\n                                     :ephemeral? false\n                                     :input? true}\n\n                              options)\n         :meta {:type :tiltontec.cell.base/cell})))\n\n(defn make-c-formula [& kvs]\n  (let [options (apply hash-map kvs)\n        rule (:rule options)]\n    (assert rule)\n    (assert (fn? rule))\n\n\n    (#?(:clj ref :cljs atom) (merge {:value unbound\n                                     ::cty/state :nascent   ;; s/b :unbound?\n                                     :pulse 0\n                                     :pulse-last-changed 0\n                                     :pulse-observed 0\n                                     :callers #{}\n                                     :useds #{}\n                                     :lazy false\n                                     :ephemeral? false\n                                     :optimize true         ;; this can also be :when-not-nil\n                                     :input? false}         ;; not redundant: can start with rule, continue as input\n\n                              options)\n         :meta {:type :tiltontec.cell.base/c-formula})))\n\n;;___________________ constructors _______________________________\n;; I seem to have created a zillion of these, but I normally\n;; use just cI, cF, and cFn (which starts out as cF and becomes cI).\n;; \n\n(defmacro c-fn-var [[c] & body]\n  `(fn [~c]\n     (let [~'me (c-model ~c)\n           ~'cell ~c\n           ~'slot-name (c-slot ~c)\n           ~'cache (c-value ~c)]\n      ~@body)))\n\n(defmacro c-fn [& body]\n  `(c-fn-var (~'slot-c#) ~@body))\n\n(defmacro cF [& body]\n  `(make-c-formula\n     :code '~body\n     :value unbound\n     :rule (c-fn ~@body)))\n\n(defmacro cF+ [[& options] & body]\n  `(make-c-formula\n     ~@options\n     :code '~body\n     :value unbound\n     :rule (c-fn ~@body)))\n\n(defmacro cFn [& body]\n  `(make-c-formula\n     :code '(without-c-dependency ~@body)\n     :input? true\n     :value unbound\n     :rule (c-fn (without-c-dependency ~@body))))\n\n(defmacro cF+n [[& options] & body]\n  `(make-c-formula\n     ~@options\n     :code '(without-c-dependency ~@body)\n     :input? true\n     :value unbound\n     :rule (c-fn (without-c-dependency ~@body))))\n\n(defmacro c_Fn [& body]\n  `(make-c-formula\n    :code '(without-c-dependency ~@body)\n    :input? true\n    :lazy :until-asked\n    :value unbound\n    :rule (c-fn (without-c-dependency ~@body))))\n\n(defmacro cFn-dbg [& body]\n  `(make-c-formula\n    :code '(without-c-dependency ~@body)\n    :input? true\n    :debug true\n    :value unbound\n    :rule (c-fn (without-c-dependency ~@body))))\n\n(defmacro cFn-until [args & body]\n  `(make-c-formula\n    :optimize :when-value-t\n    :code '~body\n    :input? true\n    :value unbound\n    :rule (c-fn ~@body)\n    ~@args))\n\n(defmacro cFonce [& body]\n  `(make-c-formula\n    :code '(without-c-dependency ~@body)\n    :input? nil\n    :value unbound\n    :rule (c-fn (without-c-dependency ~@body))))\n\n(defmacro c_1 [& body]\n  `(make-c-formula\n    :code '(without-c-dependency ~@body)\n    :input? nil\n    :lazy true\n    :value unbound\n    :rule (c-fn (without-c-dependency ~@body))))\n\n(defmacro cF1 [& body]\n  `(cFonce ~@body))\n\n(defmacro cFdbg [& body]\n  `(make-c-formula\n    :code '~body\n    :value unbound\n    :debug true\n    :rule (c-fn ~@body)))\n\n(defmacro cF_  [[& options] & body]\n  `(make-c-formula\n    ~@options\n    :code '~body\n    :value unbound\n    :lazy true\n    :rule (c-fn ~@body)))\n\n(defmacro c_F [[& options] & body]\n  \"Lazy until asked, then eagerly propagating\"\n  `(make-c-formula\n    ~@options\n    :code '~body\n    :value unbound\n    :lazy :until-asked\n    :rule (c-fn ~@body)))\n\n(defmacro c_Fdbg [& body]\n  \"Lazy until asked, then eagerly propagating\"\n  `(make-c-formula\n    :code '~body\n    :value unbound\n    :lazy :until-asked\n    :rule (c-fn ~@body)\n    :debug true))\n\n;; todo add validation somewhere of lazy option\n\n(defmacro c-formula [[& kvs] & body]\n  `(make-c-formula\n    :code '~body                                            ;; debug aid\n    :value unbound\n    :rule (c-fn ~@body)\n    ~@keys))\n\n(defn cI [value & option-kvs]\n  (apply make-cell\n         :value value\n         :input? true\n         option-kvs))\n\n;; --- where change and animation begin -------\n\n(defn cset!> [c new-value]\n  \"The moral equivalent of a Common Lisp SETF, and indeed\nin the CL version of Cells SETF itself is the change API dunction.\"\n  (assert c)\n  ;; (println :c-reset new-value)\n  (cond\n    *defer-changes*\n    (do (println :c-reset-rejecting-undeferred! (c-slot c))\n      #_ (throw (#?(:clj Exception. :cljs js/Error.)\n       (cl-format t \"c-reset!> change to ~s must be deferred by wrapping it in WITH-INTEGRITY\"\n                       (c-slot c)))))\n    ;-----------------------------------\n    (some #{(c-lazy c)} [:once-asked :always true])\n    (c-value-assume c new-value nil)\n    ;-------------------------------------------\n    :else\n    (do                                                     ;; tufte/p :wi-cvassume-sync\n     (#?(:clj dosync :cljs do)\n     (with-integrity (:change (c-slot c))\n         (c-value-assume c new-value nil))))))\n\n(defn c-reset! [c new-value]\n  (cset!> c new-value))\n\n(defn cswap!> [c swap-fn & swap-fn-args]\n  (cset!> c (apply swap-fn (<cget c) swap-fn-args)))\n\n\n(defmacro c-reset-next! [f-c f-new-value]\n  \"Observers should have side-effects only outside the\ncell-mediated model, but it can be useful to have an observer\nkick off further change to the model. To achieve this we\nallow an observer to explicitly queue a c-reset! for \nexecution as soon as the current change is manifested.\"\n  `(cond\n     (not *within-integrity*)\n     (throw (#?(:clj Exception. :cljs js/Error.) \"c-reset-next!> deferred change to %s not under WITH-INTEGRITY supervision.\"\n                        (c-slot ~f-c)))\n     ;---------------------------------------------\n     :else\n     (ufb-add :change\n              [:c-reset-next!\n               (fn [~'opcode ~'defer-info]\n                 (let [c# ~f-c\n                       new-value# ~f-new-value]\n                   (call-c-reset-next! c# new-value#)))])))\n\n(defmacro cset-next!>\n  \"Completely untested!!!!!!!!!!!!!!!\"\n  [f-c f-new-value]\n  `(c-reset-next! ~f-c ~f-new-value))\n\n\n(defn call-c-reset-next! [c new-value]\n  (cond\n    ;;-----------------------------------\n    (some #{(c-lazy c)} [:once-asked :always true])\n    (c-value-assume c new-value nil)\n    ;;-------------------------------------------\n    :else\n    (#?(:cljs do :clj dosync)\n     (c-value-assume c new-value nil))))\n\n\n","~:reader-features",["^Q",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","tiltontec.cell.core/make-cell","seq29366","self__4852__auto__","cljs.core/seq","kvs","options","cljs.core.apply","cljs.core/hash-map","cljs.core.atom","cljs.core.merge","tiltontec.cell.base/unbound","tiltontec.cell.core/make-c-formula","seq29369","rule","js/Error","cljs.core/fn?","tiltontec.cell.core/cI","seq29376","G__29377","cljs.core/first","cljs.core/next","self__4851__auto__","value","option-kvs","tiltontec.cell.core/cset!>","c","new-value","tiltontec.cell.base/*defer-changes*","cljs.core.println","tiltontec.cell.base/c-slot","cljs.core/some","tiltontec.cell.base/c-lazy","tiltontec.cell.evaluate/c-value-assume","tiltontec.cell.integrity/call-with-integrity","opcode","defer-info","tiltontec.cell.core/c-reset!","tiltontec.cell.core/cswap!>","seq29396","G__29397","G__29398","swap-fn","swap-fn-args","tiltontec.cell.evaluate/<cget","tiltontec.cell.core/call-c-reset-next!"]],"~:used-vars",["^Q",["~$tiltontec.cell.core/call-c-reset-next!","~$tiltontec.cell.base/unbound","~$cljs.core/IndexedSeq","~$tiltontec.cell.base/c-lazy","~$cljs.core/hash-map","~$cljs.core/seq","~$cljs.core/apply","~$cljs.core/atom","~$tiltontec.cell.base/*defer-changes*","~$tiltontec.cell.core/make-c-formula","~$tiltontec.cell.evaluate/<cget","~$tiltontec.cell.integrity/call-with-integrity","~$cljs.core/fn?","~$tiltontec.cell.base/c-slot","~$tiltontec.cell.core/cI","~$tiltontec.cell.core/cset!>","~$tiltontec.cell.core/make-cell","~$cljs.core/println","~$cljs.core/next","~$tiltontec.cell.core/c-reset!","~$cljs.core/first","~$tiltontec.cell.evaluate/c-value-assume","~$tiltontec.cell.core/cswap!>","~$cljs.core/merge","~$js/Error","~$cljs.core/some"]]],"~:cache-keys",["~#cmap",[["^2A","tiltontec/util/core.cljc"],["f40f0a7999587a6438e21dd23037c1b6ea226634","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^Q",[]],"~:deps-syms",["^10","^[","~$clojure.string","~$cognitect.transit","^F"]]],["^2A","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","~$goog.dom.HtmlElement"]]],["^2A","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10"]]],["^2A","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","~$goog.array","~$goog.object","~$goog.labs.userAgent.util","~$goog.string.internal"]]],["^2A","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","~$goog.asserts","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^3G"]]],["^2A","tiltontec/model/macros.cljc"],["f40f0a7999587a6438e21dd23037c1b6ea226634","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^[","^N"]]],["^2A","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^3H"]]],["^2A","com/cognitect/transit/impl/reader.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","~$com.cognitect.transit.impl.decoder","~$com.cognitect.transit.caching"]]],["^2A","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10"]]],["^2A","tiltontec/util/base.cljc"],["f40f0a7999587a6438e21dd23037c1b6ea226634","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^[","^3A"]]],["^2A","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10"]]],["^2A","com/cognitect/transit/util.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^3E"]]],["^2A","cljs/pprint.cljs"],["7d51bc68e9eca42c3e2866d92e59ef7939005fc7","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^[","^3A","~$goog.string","~$goog.string.StringBuffer"]]],["^2A","tiltontec/cell/evaluate.cljc"],["f40f0a7999587a6438e21dd23037c1b6ea226634","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^[","~$clojure.set","^F","^Y","^N","^D","^H"]]],["^2A","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10"]]],["^2A","tiltontec/cell/core.cljc"],["f40f0a7999587a6438e21dd23037c1b6ea226634","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^[","^Y","^F","^N","^D","^?","^H","^11"]]],["^2A","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10"]]],["^2A","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^3H"]]],"~:SHADOW-TIMESTAMP",[1645584859000,1645584859000,1645584856000],["^2A","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^3H","~$goog.reflect"]]],["^2A","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^3H","~$goog.fs.blob","^3I","~$goog.html.SafeScript","~$goog.html.trustedtypes","^3K","^3L","^3M","^3N"]]],["^2A","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10"]]],["^2A","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10"]]],["^2A","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^3M","~$goog.html.SafeUrl","^3N","^3H","^3G"]]],["^2A","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^3H","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^3W","~$goog.html.SafeStyle","^3Y","^3J","~$goog.html.uncheckedconversions","^3M","^3G"]]],["^2A","tiltontec/cell/observer.cljc"],["f40f0a7999587a6438e21dd23037c1b6ea226634","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^[","^F","^Y","^N","~$tiltontec.model.macros"]]],["^2A","com/cognitect/transit/delimiters.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10"]]],["^2A","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^3M","^3K","^3L","^3W","^41","~$goog.html.SafeStyleSheet","^3Y","~$goog.dom.TagName","^3J","^3N","^3H","~$goog.labs.userAgent.browser","^3D","^3E","^3G","~$goog.dom.tags","^3X"]]],["^2A","tiltontec/cell/integrity.cljc"],["f40f0a7999587a6438e21dd23037c1b6ea226634","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^[","^F","^Y","^N"]]],["^2A","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^3E"]]],["^2A","com/cognitect/transit/impl/decoder.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","~$com.cognitect.transit.util","~$com.cognitect.transit.delimiters","^3P","~$com.cognitect.transit.types"]]],["^2A","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10"]]],["^2A","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^2A","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^3D","^3H","~$goog.collections.maps","^3Q","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^2A","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10"]]],["^2A","tiltontec/cell/base.cljc"],["f40f0a7999587a6438e21dd23037c1b6ea226634","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^[","^F","~$cljs.test","^Y"]]],["^2A","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10"]]],["^2A","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10"]]],["^2A","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",[]]],["^2A","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^3D","^3E"]]],["^2A","clojure/string.cljs"],["7d51bc68e9eca42c3e2866d92e59ef7939005fc7","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^[","^3Q","^3R"]]],["^2A","com/cognitect/transit/handlers.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^48","^4:","~$goog.math.Long"]]],["^2A","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","~$goog.dom.safe","^42","^3M","^3G"]]],["^2A","com/cognitect/transit/types.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^48","~$com.cognitect.transit.eq","^4C"]]],["^2A","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10"]]],["^2A","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","~$goog.labs.userAgent","^3G"]]],["^2A","com/cognitect/transit/eq.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^48"]]],["^2A","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10"]]],["^2A","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10"]]],["^2A","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^3H","^40","^3W","^41","^44","^3Y","^3J","^3M","^3G","^3K"]]],["^2A","com/cognitect/transit/caching.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^49"]]],["^2A","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10"]]],["^2A","cljs/core.cljs"],["7d51bc68e9eca42c3e2866d92e59ef7939005fc7","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^4C","~$goog.math.Integer","^3Q","^3E","^3D","~$goog.Uri","^3R"]]],["^2A","com/cognitect/transit.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^48","~$com.cognitect.transit.impl.reader","~$com.cognitect.transit.impl.writer","^4:","^4E","^3O","^3P"]]],["^2A","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^3M","^3N","^3X","^3H"]]],["^2A","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^3M","^41","^3N","^3E","^3H","^3G"]]],["^2A","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^3U"]]],["^2A","clojure/set.cljs"],["7d51bc68e9eca42c3e2866d92e59ef7939005fc7","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^["]]],["^2A","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^3H","^3Q"]]],["^2A","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^3H","^3N"]]],["^2A","com/cognitect/transit/impl/writer.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^48","^3P","~$com.cognitect.transit.handlers","^4:","^49","^4C"]]],["^2A","cljs/test.cljs"],["7d51bc68e9eca42c3e2866d92e59ef7939005fc7","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^[","^3A","^?"]]],["^2A","cognitect/transit.cljs"],["ae688999ee978d238bffd4df0c0323e552d6d8dc","^3=",["^ ","^3>",null,"^3?",["^Q",[]],"^3@",["^10","^[","~$com.cognitect.transit","^4:","^4E","^4C"]]]]],"~:clj-info",["^ ","jar:file:/Users/kennethtilton/.m2/repository/tiltontec/matrix/4.1.7-SNAPSHOT/matrix-4.1.7-SNAPSHOT.jar!/tiltontec/cell/observer.cljc",1641339238000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1620434168000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/analyzer.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/data.json/2.4.0/data.json-2.4.0.jar!/clojure/data/json.clj",1627912789000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/analyzer/impl.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/analyzer/passes/and_or.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/tiltontec/matrix/4.1.7-SNAPSHOT/matrix-4.1.7-SNAPSHOT.jar!/tiltontec/cell/integrity.cljc",1641339238000,"jar:file:/Users/kennethtilton/.m2/repository/tiltontec/matrix/4.1.7-SNAPSHOT/matrix-4.1.7-SNAPSHOT.jar!/tiltontec/util/base.cljc",1641339238000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/source_map/base64.clj",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/instant.clj",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/template.clj",1620434168000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/js_deps.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1620434168000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/walk.clj",1620434168000,"jar:file:/Users/kennethtilton/.m2/repository/tiltontec/matrix/4.1.7-SNAPSHOT/matrix-4.1.7-SNAPSHOT.jar!/tiltontec/util/core.cljc",1641339238000,"jar:file:/Users/kennethtilton/.m2/repository/tiltontec/matrix/4.1.7-SNAPSHOT/matrix-4.1.7-SNAPSHOT.jar!/tiltontec/cell/base.cljc",1641339238000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/core.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1620434168000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1620434168000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/analyzer/api.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/externs.clj",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/test.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1630576733000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1620434168000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1620434168000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/pprint.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/source_map.clj",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/compiler.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1620434168000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1630576733000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/source_map/base64_vlq.clj",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/tagged_literals.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/env.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/util.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/analyzer/passes.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1630576733000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1630576733000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1630576733000,"jar:file:/Users/kennethtilton/.m2/repository/tiltontec/matrix/4.1.7-SNAPSHOT/matrix-4.1.7-SNAPSHOT.jar!/tiltontec/model/macros.cljc",1641339238000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","tiltontec/cell/core.cljc","^7",1,"^8",5,"^9",1,"^:",24],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",["^ ","^C","^D","^E","^F","^G","^H","^I","^F","^J","^F","^K","^F","^L","^F","^M","^N","^O","^F"],"^P",["^Q",[]],"^R","^S","^T",["^ "],"^W",null,"^X",["^ ","^D","^D","^N","^N","^Y","^Y","^Z","^N","^[","^[","^10","^10","^11","^11","^?","^?","^F","^F","^H","^H"],"^12",["^Q",["^13"]],"~:shadow/js-access-global",["^Q",["Error"]],"^14",["^ ","^15","^N","^16","^N","^17","^?","^18","^N","^19","^N","^1:","^N","^1;","^N","^1<","^N","^1=","^N","^1>","^N","^1?","^N","^1@","^N","^1A","^N","^1B","^N","^1C","^N","^1D","^11","^1E","^N","^1F","^N","^1G","^N","^1H","^11","^1I","^N","^1J","^N","^1K","^11","^1L","^N","^1M","^?","^1N","^N","^1O","^N","^1P","^11","^1Q","^N","^1R","^N","^1S","^N","^1T","^N","^1U","^N","^1V","^11","^1W","^N","^1X","^N","^1Y","^N","^1Z","^N","^1[","^N","^20","^N","^21","^N","^22","^N","^23","^N","^24","^Y","^25","^N"],"~:defs",["^ ","~$make-cell",["^ ","~:protocol-inline",null,"^5",["^ ","^6","tiltontec/cell/core.cljc","^7",46,"^8",7,"^9",46,"^:",16,"~:arglists",["^28",["~$quote",["^28",[["~$&","~$kvs"]]]]],"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",0,"~:max-fixed-arity",0,"~:method-params",[["^28",["^5P"]]],"^5N",["^28",[["~$&","^5P"]]],"~:arglists-meta",["^28",[null]]]],"^R","^31","^6","tiltontec/cell/core.cljc","^:",16,"^5Q",["^ ","^5R",true,"^5S",0,"^5T",0,"^5U",[["^28",["^5P"]]],"^5N",["^28",[["~$&","^5P"]]],"^5V",["^28",[null]]],"^5U",[["^28",["^5P"]]],"~:protocol-impl",null,"^5S",0,"^5V",["^28",[null]],"^8",1,"^5R",true,"~:methods",[["^ ","^5S",0,"^5R",true,"~:tag","~$cljs.core/Atom"]],"^7",46,"~:ret-tag","~$any","^9",46,"^5T",0,"~:fn-var",true,"^5N",["^28",[["~$&","^5P"]]]],"~$make-c-formula",["^ ","^5M",null,"^5",["^ ","^6","tiltontec/cell/core.cljc","^7",64,"^8",7,"^9",64,"^:",21,"^5N",["^28",["^5O",["^28",[["~$&","^5P"]]]]],"^5Q",["^ ","^5R",true,"^5S",0,"^5T",0,"^5U",[["^28",["^5P"]]],"^5N",["^28",[["~$&","^5P"]]],"^5V",["^28",[null]]]],"^R","^2V","^6","tiltontec/cell/core.cljc","^:",21,"^5Q",["^ ","^5R",true,"^5S",0,"^5T",0,"^5U",[["^28",["^5P"]]],"^5N",["^28",[["~$&","^5P"]]],"^5V",["^28",[null]]],"^5U",[["^28",["^5P"]]],"^5W",null,"^5S",0,"^5V",["^28",[null]],"^8",1,"^5R",true,"^5X",[["^ ","^5S",0,"^5R",true,"^5Y","^5Z"]],"^7",64,"^5[","^60","^9",64,"^5T",0,"^61",true,"^5N",["^28",[["~$&","^5P"]]]],"~$cI",["^ ","^5M",null,"^5",["^ ","^6","tiltontec/cell/core.cljc","^7",215,"^8",7,"^9",215,"^:",9,"^5N",["^28",["^5O",["^28",[["~$value","~$&","~$option-kvs"]]]]],"^5Q",["^ ","^5R",true,"^5S",1,"^5T",1,"^5U",[["^28",["^64","^65"]]],"^5N",["^28",[["^64","~$&","^65"]]],"^5V",["^28",[null]]]],"^R","^2[","^6","tiltontec/cell/core.cljc","^:",9,"^5Q",["^ ","^5R",true,"^5S",1,"^5T",1,"^5U",[["^28",["^64","^65"]]],"^5N",["^28",[["^64","~$&","^65"]]],"^5V",["^28",[null]]],"^5U",[["^28",["^64","^65"]]],"^5W",null,"^5S",1,"^5V",["^28",[null]],"^8",1,"^5R",true,"^5X",[["^ ","^5S",1,"^5R",true,"^5Y","^60"]],"^7",215,"^5[","^60","^9",215,"^5T",1,"^61",true,"^5N",["^28",[["^64","~$&","^65"]]]],"~$cset!>",["^ ","^5M",null,"^5",["^ ","^6","tiltontec/cell/core.cljc","^7",223,"^8",7,"^9",223,"^:",13,"^5N",["^28",["^5O",["^28",[["~$c","~$new-value"]]]]]],"^R","^30","^6","tiltontec/cell/core.cljc","^:",13,"^5U",["^28",[["~$c","^67"]]],"^5W",null,"^5V",["^28",[null,null]],"^8",1,"^5R",false,"^7",223,"^5[",["^Q",[null,"^60","~$cljs.core/Keyword","~$clj-nil"]],"^9",223,"^5T",2,"^61",true,"^5N",["^28",["^5O",["^28",[["~$c","^67"]]]]]],"~$c-reset!",["^ ","^5M",null,"^5",["^ ","^6","tiltontec/cell/core.cljc","^7",244,"^8",7,"^9",244,"^:",15,"^5N",["^28",["^5O",["^28",[["~$c","^67"]]]]]],"^R","^34","^6","tiltontec/cell/core.cljc","^:",15,"^5U",["^28",[["~$c","^67"]]],"^5W",null,"^5V",["^28",[null,null]],"^8",1,"^5R",false,"^7",244,"^5[",["^Q",[null,"^60","^68","^69"]],"^9",244,"^5T",2,"^61",true,"^5N",["^28",["^5O",["^28",[["~$c","^67"]]]]]],"~$cswap!>",["^ ","^5M",null,"^5",["^ ","^6","tiltontec/cell/core.cljc","^7",247,"^8",7,"^9",247,"^:",14,"^5N",["^28",["^5O",["^28",[["~$c","~$swap-fn","~$&","~$swap-fn-args"]]]]],"^5Q",["^ ","^5R",true,"^5S",2,"^5T",2,"^5U",[["^28",["~$c","^6<","^6="]]],"^5N",["^28",[["~$c","^6<","~$&","^6="]]],"^5V",["^28",[null]]]],"^R","^37","^6","tiltontec/cell/core.cljc","^:",14,"^5Q",["^ ","^5R",true,"^5S",2,"^5T",2,"^5U",[["^28",["~$c","^6<","^6="]]],"^5N",["^28",[["~$c","^6<","~$&","^6="]]],"^5V",["^28",[null]]],"^5U",[["^28",["~$c","^6<","^6="]]],"^5W",null,"^5S",2,"^5V",["^28",[null]],"^8",1,"^5R",true,"^5X",[["^ ","^5S",2,"^5R",true,"^5Y",["^Q",[null,"^60","^68","^69"]]]],"^7",247,"^5[","^60","^9",247,"^5T",2,"^61",true,"^5N",["^28",[["~$c","^6<","~$&","^6="]]]],"~$call-c-reset-next!",["^ ","^5M",null,"^5",["^ ","^6","tiltontec/cell/core.cljc","^7",276,"^8",7,"^9",276,"^:",25,"^5N",["^28",["^5O",["^28",[["~$c","^67"]]]]]],"^R","^2M","^6","tiltontec/cell/core.cljc","^:",25,"^5U",["^28",[["~$c","^67"]]],"^5W",null,"^5V",["^28",[null,null]],"^8",1,"^5R",false,"^7",276,"^5[","^60","^9",276,"^5T",2,"^61",true,"^5N",["^28",["^5O",["^28",[["~$c","^67"]]]]]]],"^26",["^ ","^F","^F","^N","^N","^Z","^N","^D","^D","^H","^H","^[","^[","^?","^?"],"~:cljs.analyzer/constants",["^ ","^12",["^Q",["~:callers","~:c-reset-rejecting-undeferred!","^5","~:else","~:rule","~:value","~:type","~:ephemeral?","~:synapses","~:nascent","~:pulse-observed","~:lazy","~:tiltontec.cell.base/c-formula","~:pulse-last-changed","~:tiltontec.cell.base/state","~:pulse","~:useds","~:tiltontec.cell.base/cell","~:optimize","~:once-asked","~:change","~:input?","~:always"]],"~:order",["^6@","^6D","^6F","^6G","^6I","^6J","^6L","^6M","^6N","^6T","^6H","^5","^6E","^6P","^6C","^6O","^6Q","^6K","^6A","^6R","^6U","^6B","^6S"]],"^2=",["^ ","^13",["^Q",[]]],"^2>",["^ "],"^2?",["^10","^[","^Y","^F","^N","^D","^?","^H","^11"]],"^V","^S","~:ns-specs",["^ "],"~:ns-spec-vars",["^Q",[]],"~:compiler-options",["^3<",[["^6Y","~:static-fns"],true,["^6Y","~:shadow-tweaks"],null,["^6Y","~:source-map-inline"],null,["^6Y","~:elide-asserts"],false,["^6Y","~:optimize-constants"],null,["^6Y","^2D"],null,["^6Y","~:external-config"],null,["^6Y","~:tooling-config"],null,["^6Y","~:emit-constants"],null,["^6Y","~:load-tests"],null,["^6Y","~:form-size-threshold"],null,["^6Y","~:global-goog-object&array"],null,["^6Y","~:data-readers"],null,["^6Y","~:infer-externs"],"~:auto",["^6Y","^2F"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6Y","~:fn-invoke-direct"],null,["^6Y","~:source-map"],"/dev/null"]]]