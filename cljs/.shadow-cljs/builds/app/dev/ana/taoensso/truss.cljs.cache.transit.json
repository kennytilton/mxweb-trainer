["^ ","~:output",["^ ","~:js","goog.provide('taoensso.truss');\n/**\n * Returns current value of dynamic assertion data.\n */\ntaoensso.truss.get_dynamic_assertion_data = (function taoensso$truss$get_dynamic_assertion_data(){\nreturn taoensso.truss.impl._STAR__QMARK_data_STAR_;\n});\ntaoensso.truss._error_fn = (function taoensso$truss$_error_fn(f){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328))){\nreturn taoensso.truss.impl.default_error_fn;\n} else {\nreturn f;\n}\n});\n/**\n * Sets the root (fn [data-map-delay]) called on invariant violations.\n */\ntaoensso.truss.set_error_fn_BANG_ = (function taoensso$truss$set_error_fn_BANG_(f){\nreturn (taoensso.truss.impl._STAR_error_fn_STAR_ = taoensso.truss._error_fn(f));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:author","Peter Taoussanis (@ptaoussanis)","~:doc","An opinionated assertions API for Clojure/Script.","~:file","taoensso/truss.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",19],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$-invariant","~$taoensso.truss.impl"],"~:excludes",["~#set",[]],"~:name","~$taoensso.truss","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","^F","^F","~$impl","^F","~$cljs.core","^Q","~$goog","^R"],"~:seen",["^H",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^F","^F","^P","^F","^Q","^Q"],"~:form",["~#list",["~$ns","^J","An opinionated assertions API for Clojure/Script.",["^ ","^6","Peter Taoussanis (@ptaoussanis)"],["^X",["^T",["^F","~:as","^P","~:refer-macros",["^E"]]]]]],"~:flags",["^ ","^T",["^H",[]]],"~:js-deps",["^ "],"~:deps",["^R","^Q","^F"]],"^M","^J","~:resource-id",["~:shadow.build.classpath/resource","taoensso/truss.cljs"],"~:compiled-at",1645592440684,"^K",["^ ","^F","^F","^P","^F","^Q","^Q","^R","^R"],"~:resource-name","taoensso/truss.cljs","~:warnings",[],"~:source","(ns taoensso.truss\n  \"An opinionated assertions API for Clojure/Script.\"\n  {:author \"Peter Taoussanis (@ptaoussanis)\"}\n                                                                             \n         (:require [taoensso.truss.impl :as impl :refer-macros [-invariant]]))\n\n(comment (require '[taoensso.encore :as enc :refer (qb)]))\n\n;;;; Core API\n\n              \n                                                                  \n                                                                             \n                                                                     \n\n                                                                         \n                \n\n                                                                             \n                                                  \n\n                                                                  \n                                              \n\n                                                                   \n                                                               \n\n                             \n                                                        \n                                                                    \n\n               \n                                                                          \n                                                           \n                                                                     \n                                                                                    \n                                                        \n                                                                        \n\n               \n                                                                          \n                                                                 \n                                                        \n                                                              \n\n                \n                                                                           \n                                                                          \n                                        \n\n                                                                            \n                                                                            \n                                                        \n                                                                         \n\n(comment\n  (let [x 5]      (have    integer? x))\n  (let [x 5]      (have    string?  x))\n  (let [x 5]      (have :! string?  x))\n  (let [x 5 y  6] (have odd?  x x x y x))\n  (let [x 0 y :a] (have zero? x x x y x))\n  (have string? (do (println \"eval1\") \"foo\")\n                (do (println \"eval2\") \"bar\"))\n  (have number? (do (println \"eval1\") 5)\n                (do (println \"eval2\") \"bar\")\n                (do (println \"eval3\") 10))\n  (have pos? \"hello\")\n  (have pos? (/ 1 0))\n  (have nil? false)\n  (have nil)\n  (have false)\n  (have string? :in [\"a\" \"b\"])\n  (have string? :in (if true  [\"a\" \"b\"] [1 2]))\n  (have string? :in (if false [\"a\" \"b\"] [1 2]))\n  (have string? :in (mapv str (range 10)))\n  (have string? :in [\"a\" 1])\n  (have string? :in [\"a\" \"b\"] [\"a\" \"b\"])\n  (have string? :in [\"a\" \"b\"] [\"a\" \"b\" 1])\n  ((fn foo [x] {:pre [(have? integer? x)]} (* x x)) \"foo\")\n  (macroexpand '(have a))\n  (have? [:or nil? string?] \"hello\")\n  (macroexpand '(have? [:or nil? string?] \"hello\"))\n  (have? [:set>= #{:a :b}]    [:a :b :c])\n  (have? [:set<= [:a :b :c]] #{:a :b})\n  (have? [:n= 3] [:a :b :c :d])\n  (qb 10000\n    (with-error-fn nil                  (have? string? 5))\n    (with-error-fn (fn [_] :truss/error) (have? string? 5)))\n\n  (have string? (range 1000)))\n\n(comment\n  ;; HotSpot is great with these:\n  (qb 10000\n    (string? \"a\")\n    (have?   \"a\")\n    (have            string?  \"a\" \"b\" \"c\")\n    (have? [:or nil? string?] \"a\" \"b\" \"c\")\n    (have? [:or nil? string?] \"a\" \"b\" \"c\" :data \"foo\"))\n  ;; [     5.59 26.48 45.82     ] ; 1st gen (macro form)\n  ;; [     3.31 13.48 36.22     ] ; 2nd gen (fn form)\n  ;; [0.82 1.75  7.57 27.05     ] ; 3rd gen (lean macro form)\n  ;; [0.4  0.47  1.3  1.77  1.53] ; 4th gen (macro preds)\n\n  (qb 10000\n    (have  string? :in [\"foo\" \"bar\" \"baz\"])\n    (have? string? :in [\"foo\" \"bar\" \"baz\"]))\n\n  (macroexpand '(have string? 5))\n  (macroexpand '(have string? 5 :data \"foo\"))\n  (macroexpand '(have string? 5 :data (enc/get-env)))\n  (let [x :x]   (have string? 5 :data (enc/get-env)))\n\n  (have string? 5)\n  (have string? 5 :data {:a \"a\"})\n  (have string? 5 :data {:a (/ 5 0)})\n\n  ((fn [x]\n     (let [a \"a\" b \"b\"]\n       (have string? x :data {:env (enc/get-env)}))) 5)\n\n  (do\n    (set! *assert* false)\n    (have? integer? 4.0))\n\n  ;; Combinations: truthy?, single?, in? (8 combinations)\n  (do (def i1 1) (def v1 [1 2 3]) (def s1 #{1 2 3}))\n  (macroexpand '(have? integer?      1))\n  (macroexpand '(have? integer?      1 2 i1))\n  (macroexpand '(have? integer? :in [1 2 i1]))\n  (macroexpand '(have? integer? :in [1 2] [3 4 i1] v1))\n  (macroexpand '(have  integer?      1))\n  (macroexpand '(have  integer?      1 2 i1))\n  (macroexpand '(have  integer? :in [1 2 i1]))\n  (macroexpand '(have  integer? :in [1 2] [3 4 i1] v1))\n\n  (have? integer? :in s1)\n  (have  integer? :in s1)\n  (have  integer? :in #{1 2 3})\n  (have  integer? :in #{1 2 3} [4 5 6] #{7 8 9} s1))\n\n;;;; Utils\n\n(defn get-dynamic-assertion-data\n  \"Returns current value of dynamic assertion data.\"\n  [] impl/*?data*)\n\n                                     \n                                                                  \n                                                                     \n                                                       \n\n(comment (with-dynamic-assertion-data \"foo\" (have string? 5 :data \"bar\")))\n\n(defn-   -error-fn [f] (if (= f :default) impl/default-error-fn f))\n(defn set-error-fn!\n  \"Sets the root (fn [data-map-delay]) called on invariant violations.\"\n  [f]\n         (set!             impl/*error-fn*        (-error-fn f))\n                                                                  )\n\n                                  \n                                                     \n\n;;;;;;;;;;;; This file autogenerated from src/taoensso/truss.cljx\n","~:reader-features",["^H",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";AAMA,AAiDA,AAoCA,AAoDA;;;4CAAA,5CAAMA;AAAN,AAEKC;;AAOL,AAEA,2BAAA,3BAASC,8DAAWC;AAApB,AAAuB,GAAI,+CAAA,/CAACC,6CAAED;AAAYE;;AAAsBF;;;AAChE;;;oCAAA,pCAAMG,gFAEHH;AAFH,AAGS,QAAkBI,2CAAuB,AAACL,yBAAUC","names",["taoensso.truss/get-dynamic-assertion-data","taoensso.truss.impl/*?data*","taoensso.truss/-error-fn","f","cljs.core._EQ_","taoensso.truss.impl/default-error-fn","taoensso.truss/set-error-fn!","taoensso.truss.impl/*error-fn*"]],"~:used-vars",["^H",["~$cljs.core/=","~$taoensso.truss/get-dynamic-assertion-data","~$taoensso.truss.impl/*?data*","~$taoensso.truss.impl/default-error-fn","~$taoensso.truss.impl/*error-fn*","~$taoensso.truss/set-error-fn!","~$taoensso.truss/-error-fn"]]],"~:cache-keys",["~#cmap",[["^14","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^H",[]],"~:deps-syms",["^R","~$goog.dom.HtmlElement"]]],["^14","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R"]]],["^14","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","~$goog.array","~$goog.object","~$goog.labs.userAgent.util","~$goog.string.internal"]]],["^14","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","~$goog.asserts","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^1Q"]]],["^14","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","^1R"]]],["^14","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R"]]],["^14","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R"]]],["^14","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R"]]],["^14","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R"]]],["^14","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","^1R"]]],"~:SHADOW-TIMESTAMP",[1645584859000,1645584859000,1645584856000],["^14","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","^1R","~$goog.reflect"]]],["^14","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","^1R","~$goog.fs.blob","^1S","~$goog.html.SafeScript","~$goog.html.trustedtypes","^1U","^1V","^1W","^1X"]]],["^14","taoensso/truss.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","^Q","^F"]]],["^14","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R"]]],["^14","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R"]]],["^14","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","^1W","~$goog.html.SafeUrl","^1X","^1R","^1Q"]]],["^14","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","^1R","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^20","~$goog.html.SafeStyle","^22","^1T","~$goog.html.uncheckedconversions","^1W","^1Q"]]],["^14","taoensso/truss/impl.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","^Q","~$clojure.set"]]],["^14","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","^1W","^1U","^1V","^20","^26","~$goog.html.SafeStyleSheet","^22","~$goog.dom.TagName","^1T","^1X","^1R","~$goog.labs.userAgent.browser","^1N","^1O","^1Q","~$goog.dom.tags","^21"]]],["^14","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","^1O"]]],["^14","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R"]]],["^14","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^14","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","^1N","^1R","~$goog.collections.maps","~$goog.string","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^14","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R"]]],["^14","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R"]]],["^14","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R"]]],["^14","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",[]]],["^14","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","^1N","^1O"]]],["^14","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","~$goog.dom.safe","^27","^1W","^1Q"]]],["^14","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R"]]],["^14","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","~$goog.labs.userAgent","^1Q"]]],["^14","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R"]]],["^14","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R"]]],["^14","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","^1R","^25","^20","^26","^29","^22","^1T","^1W","^1Q","^1U"]]],["^14","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R"]]],["^14","cljs/core.cljs"],["7d51bc68e9eca42c3e2866d92e59ef7939005fc7","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","~$goog.math.Long","~$goog.math.Integer","^2@","^1O","^1N","~$goog.Uri","~$goog.string.StringBuffer"]]],["^14","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","^1W","^1X","^21","^1R"]]],["^14","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","^1W","^26","^1X","^1O","^1R","^1Q"]]],["^14","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","^1Z"]]],["^14","clojure/set.cljs"],["7d51bc68e9eca42c3e2866d92e59ef7939005fc7","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","^Q"]]],["^14","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","^1R","^2@"]]],["^14","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1I",["^ ","^1J",null,"^1K",["^H",[]],"^1L",["^R","^1R","^1X"]]]]],"~:clj-info",["^ ","jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1620434168000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/analyzer.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/data.json/2.4.0/data.json-2.4.0.jar!/clojure/data/json.clj",1627912789000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/analyzer/impl.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/analyzer/passes/and_or.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/source_map/base64.clj",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/instant.clj",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/js_deps.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1620434168000,"jar:file:/Users/kennethtilton/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss/impl.clj",1619058311000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/core.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1620434168000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1620434168000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/externs.clj",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1630576733000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1620434168000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1620434168000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/source_map.clj",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/compiler.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1620434168000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1630576733000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/source_map/base64_vlq.clj",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/tagged_literals.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/env.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/util.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/analyzer/passes.cljc",1645584856000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1630576733000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1630576733000,"jar:file:/Users/kennethtilton/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1630576733000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Peter Taoussanis (@ptaoussanis)","^7","An opinionated assertions API for Clojure/Script.","^8","taoensso/truss.cljs","^9",1,"^:",5,"^;",1,"^<",19],"^=",["^ ","^>","^?","^@","^A","^B","^C"],"^D",["^ ","^E","^F"],"^G",["^H",[]],"^I","^J","^K",["^ "],"^N",null,"^O",["^ ","^F","^F","^P","^F","^Q","^Q","^R","^R"],"^S",["^H",["^T"]],"^U",null,"~:defs",["^ ","~$get-dynamic-assertion-data",["^ ","~:protocol-inline",null,"^5",["^ ","^8","taoensso/truss.cljs","^9",144,"^:",7,"^;",144,"^<",33,"~:arglists",["^X",["~$quote",["^X",[[]]]]],"^7","Returns current value of dynamic assertion data."],"^I","^1A","^8","taoensso/truss.cljs","^<",33,"~:method-params",["^X",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^X",[null,null]],"^:",1,"~:variadic?",false,"^9",144,"~:ret-tag","~$any","^;",144,"~:max-fixed-arity",0,"~:fn-var",true,"^3A",["^X",["^3B",["^X",[[]]]]],"^7","Returns current value of dynamic assertion data."],"~$-error-fn",["^ ","^3@",null,"^5",["^ ","^8","taoensso/truss.cljs","^9",155,"^:",10,"^;",155,"^<",19,"~:private",true,"^3A",["^X",["^3B",["^X",[["~$f"]]]]]],"^3L",true,"^I","^1F","^8","taoensso/truss.cljs","^<",19,"^3C",["^X",[["~$f"]]],"^3D",null,"^3E",["^X",[null,null]],"^:",1,"^3F",false,"^9",155,"^;",155,"^3I",1,"^3J",true,"^3A",["^X",["^3B",["^X",[["~$f"]]]]]],"~$set-error-fn!",["^ ","^3@",null,"^5",["^ ","^8","taoensso/truss.cljs","^9",156,"^:",7,"^;",156,"^<",20,"^3A",["^X",["^3B",["^X",[["~$f"]]]]],"^7","Sets the root (fn [data-map-delay]) called on invariant violations."],"^I","^1E","^8","taoensso/truss.cljs","^<",20,"^3C",["^X",[["~$f"]]],"^3D",null,"^3E",["^X",[null,null]],"^:",1,"^3F",false,"^9",156,"^;",156,"^3I",1,"^3J",true,"^3A",["^X",["^3B",["^X",[["~$f"]]]]],"^7","Sets the root (fn [data-map-delay]) called on invariant violations."]],"^V",["^ ","^F","^F","^P","^F","^Q","^Q"],"~:cljs.analyzer/constants",["^ ","^S",["^H",["~:default"]],"~:order",["^3O"]],"^10",["^ ","^T",["^H",[]]],"^11",["^ "],"^12",["^R","^Q","^F"]],"^M","^J","~:ns-specs",["^ "],"~:ns-spec-vars",["^H",[]],"~:compiler-options",["^1H",[["^3S","~:static-fns"],true,["^3S","~:shadow-tweaks"],null,["^3S","~:source-map-inline"],null,["^3S","~:elide-asserts"],false,["^3S","~:optimize-constants"],null,["^3S","^17"],null,["^3S","~:external-config"],null,["^3S","~:tooling-config"],null,["^3S","~:emit-constants"],null,["^3S","~:load-tests"],null,["^3S","~:form-size-threshold"],null,["^3S","~:global-goog-object&array"],null,["^3S","~:data-readers"],null,["^3S","~:infer-externs"],"~:auto",["^3S","^19"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^3S","~:fn-invoke-direct"],null,["^3S","~:source-map"],"/dev/null"]]]