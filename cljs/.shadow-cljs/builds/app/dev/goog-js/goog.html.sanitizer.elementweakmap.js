["^ ","~:resource-id",["~:shadow.build.classpath/resource","goog/html/sanitizer/elementweakmap.js"],"~:js","goog.loadModule(function(exports) {\n  \"use strict\";\n  goog.module(\"goog.html.sanitizer.ElementWeakMap\");\n  goog.module.declareLegacyNamespace();\n  var noclobber = goog.require(\"goog.html.sanitizer.noclobber\");\n  var NATIVE_WEAKMAP_SUPPORTED = typeof WeakMap != \"undefined\" && WeakMap.toString().indexOf(\"[native code]\") != -1;\n  var DATA_ATTRIBUTE_NAME_PREFIX = \"data-elementweakmap-index-\";\n  var weakMapCount = 0;\n  var ElementWeakMap = function() {\n    this.keys_ = [];\n    this.values_ = [];\n    this.dataAttributeName_ = DATA_ATTRIBUTE_NAME_PREFIX + weakMapCount++;\n  };\n  ElementWeakMap.prototype.set = function(elementKey, value) {\n    if (noclobber.hasElementAttribute(elementKey, this.dataAttributeName_)) {\n      var itemIndex = parseInt(noclobber.getElementAttribute(elementKey, this.dataAttributeName_), 10);\n      this.values_[itemIndex] = value;\n    } else {\n      var itemIndex = this.values_.push(value) - 1;\n      noclobber.setElementAttribute(elementKey, this.dataAttributeName_, itemIndex.toString());\n      this.keys_.push(elementKey);\n    }\n    return this;\n  };\n  ElementWeakMap.prototype.get = function(elementKey) {\n    if (!noclobber.hasElementAttribute(elementKey, this.dataAttributeName_)) {\n      return undefined;\n    }\n    var itemIndex = parseInt(noclobber.getElementAttribute(elementKey, this.dataAttributeName_), 10);\n    return this.values_[itemIndex];\n  };\n  ElementWeakMap.prototype.clear = function() {\n    this.keys_.forEach(function(el) {\n      noclobber.removeElementAttribute(el, this.dataAttributeName_);\n    }, this);\n    this.keys_ = [];\n    this.values_ = [];\n  };\n  ElementWeakMap.newWeakMap = function() {\n    return NATIVE_WEAKMAP_SUPPORTED ? new WeakMap() : new ElementWeakMap();\n  };\n  exports = ElementWeakMap;\n  return exports;\n});\n","~:source","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @package\n * @supported IE 10+ and other browsers. IE 8 and IE 9 could be supported by\n * by making anti-clobbering support optional.\n */\n\ngoog.module('goog.html.sanitizer.ElementWeakMap');\ngoog.module.declareLegacyNamespace();\n\nvar noclobber = goog.require('goog.html.sanitizer.noclobber');\n\n// We also need to check if WeakMap has been polyfilled, because we want to use\n// ElementWeakMap instead of the polyfill.\n/** @const {boolean} */\nvar NATIVE_WEAKMAP_SUPPORTED = typeof WeakMap != 'undefined' &&\n    WeakMap.toString().indexOf('[native code]') != -1;\n\n/** @const {string} */\nvar DATA_ATTRIBUTE_NAME_PREFIX = 'data-elementweakmap-index-';\n\n// Increased every time a new ElementWeakMap is constructed, to guarantee\n// that each weakmap uses a different attribute name.\nvar weakMapCount = 0;\n\n/**\n * A weakmap-like implementation for browsers that don't support native WeakMap.\n * It uses a data attribute on the key element for O(1) lookups.\n * @template T\n * @constructor\n */\nvar ElementWeakMap = function() {\n  /** @private {!Array<!Element>} */\n  this.keys_ = [];\n\n  /** @private {!Array<!T>} */\n  this.values_ = [];\n\n  /** @private @const {string} */\n  this.dataAttributeName_ = DATA_ATTRIBUTE_NAME_PREFIX + weakMapCount++;\n};\n\n/**\n * Stores a `elementKey` -> `value` mapping.\n * @param {!Element} elementKey\n * @param {!T} value\n * @return {!ElementWeakMap}\n */\nElementWeakMap.prototype.set = function(elementKey, value) {\n  if (noclobber.hasElementAttribute(elementKey, this.dataAttributeName_)) {\n    var itemIndex = parseInt(\n        noclobber.getElementAttribute(elementKey, this.dataAttributeName_), 10);\n    this.values_[itemIndex] = value;\n  } else {\n    var itemIndex = this.values_.push(value) - 1;\n    noclobber.setElementAttribute(\n        elementKey, this.dataAttributeName_, itemIndex.toString());\n    this.keys_.push(elementKey);\n  }\n  return this;\n};\n\n/**\n * Gets the value previously stored for `elementKey`, or undefined if no\n * value was stored for such key.\n * @param {!Element} elementKey\n * @return {!Element|undefined}\n */\nElementWeakMap.prototype.get = function(elementKey) {\n  if (!noclobber.hasElementAttribute(elementKey, this.dataAttributeName_)) {\n    return undefined;\n  }\n  var itemIndex = parseInt(\n      noclobber.getElementAttribute(elementKey, this.dataAttributeName_), 10);\n  return this.values_[itemIndex];\n};\n\n/** Clears the map. */\nElementWeakMap.prototype.clear = function() {\n  this.keys_.forEach(function(el) {\n    noclobber.removeElementAttribute(el, this.dataAttributeName_);\n  }, this);\n  this.keys_ = [];\n  this.values_ = [];\n};\n\n/**\n * Returns either this weakmap adapter or the native weakmap implmentation, if\n * available.\n * @return {!ElementWeakMap|!WeakMap}\n */\nElementWeakMap.newWeakMap = function() {\n  return NATIVE_WEAKMAP_SUPPORTED ? new WeakMap() : new ElementWeakMap();\n};\n\nexports = ElementWeakMap;\n","~:compiled-at",1645592433416,"~:source-map-json","{\n\"version\":3,\n\"file\":\"goog.html.sanitizer.elementweakmap.js\",\n\"lineCount\":45,\n\"mappings\":\"AAYA,IAAA,CAAA,UAAA,CAAA,QAAA,CAAA,OAAA,CAAA;AAAA,cAAA;AAAAA,MAAKC,CAAAA,MAAL,CAAY,oCAAZ,CAAA;AACAD,MAAKC,CAAAA,MAAOC,CAAAA,sBAAZ,EAAA;AAEA,MAAIC,YAAYH,IAAKI,CAAAA,OAAL,CAAa,+BAAb,CAAhB;AAKA,MAAIC,2BAA2B,MAAOC,QAAlCD,IAA6C,WAA7CA,IACAC,OAAQC,CAAAA,QAAR,EAAmBC,CAAAA,OAAnB,CAA2B,eAA3B,CADAH,IAC+C,CAAC,CADpD;AAIA,MAAII,6BAA6B,4BAAjC;AAIA,MAAIC,eAAe,CAAnB;AAQA,MAAIC,iBAAiBA,QAAQ,EAAG;AAE9B,QAAKC,CAAAA,KAAL,GAAa,EAAb;AAGA,QAAKC,CAAAA,OAAL,GAAe,EAAf;AAGA,QAAKC,CAAAA,kBAAL,GAA0BL,0BAA1B,GAAuDC,YAAA,EAAvD;AAR8B,GAAhC;AAiBAC,gBAAeI,CAAAA,SAAUC,CAAAA,GAAzB,GAA+BC,QAAQ,CAACC,UAAD,EAAaC,KAAb,CAAoB;AACzD,QAAIhB,SAAUiB,CAAAA,mBAAV,CAA8BF,UAA9B,EAA0C,IAAKJ,CAAAA,kBAA/C,CAAJ,CAAwE;AACtE,UAAIO,YAAYC,QAAA,CACZnB,SAAUoB,CAAAA,mBAAV,CAA8BL,UAA9B,EAA0C,IAAKJ,CAAAA,kBAA/C,CADY,EACwD,EADxD,CAAhB;AAEA,UAAKD,CAAAA,OAAL,CAAaQ,SAAb,CAAA,GAA0BF,KAA1B;AAHsE,KAAxE,KAIO;AACL,UAAIE,YAAY,IAAKR,CAAAA,OAAQW,CAAAA,IAAb,CAAkBL,KAAlB,CAAZE,GAAuC,CAA3C;AACAlB,eAAUsB,CAAAA,mBAAV,CACIP,UADJ,EACgB,IAAKJ,CAAAA,kBADrB,EACyCO,SAAUd,CAAAA,QAAV,EADzC,CAAA;AAEA,UAAKK,CAAAA,KAAMY,CAAAA,IAAX,CAAgBN,UAAhB,CAAA;AAJK;AAMP,WAAO,IAAP;AAXyD,GAA3D;AAoBAP,gBAAeI,CAAAA,SAAUW,CAAAA,GAAzB,GAA+BC,QAAQ,CAACT,UAAD,CAAa;AAClD,QAAI,CAACf,SAAUiB,CAAAA,mBAAV,CAA8BF,UAA9B,EAA0C,IAAKJ,CAAAA,kBAA/C,CAAL;AACE,aAAOc,SAAP;AADF;AAGA,QAAIP,YAAYC,QAAA,CACZnB,SAAUoB,CAAAA,mBAAV,CAA8BL,UAA9B,EAA0C,IAAKJ,CAAAA,kBAA/C,CADY,EACwD,EADxD,CAAhB;AAEA,WAAO,IAAKD,CAAAA,OAAL,CAAaQ,SAAb,CAAP;AANkD,GAApD;AAUAV,gBAAeI,CAAAA,SAAUc,CAAAA,KAAzB,GAAiCC,QAAQ,EAAG;AAC1C,QAAKlB,CAAAA,KAAMmB,CAAAA,OAAX,CAAmB,QAAQ,CAACC,EAAD,CAAK;AAC9B7B,eAAU8B,CAAAA,sBAAV,CAAiCD,EAAjC,EAAqC,IAAKlB,CAAAA,kBAA1C,CAAA;AAD8B,KAAhC,EAEG,IAFH,CAAA;AAGA,QAAKF,CAAAA,KAAL,GAAa,EAAb;AACA,QAAKC,CAAAA,OAAL,GAAe,EAAf;AAL0C,GAA5C;AAaAF,gBAAeuB,CAAAA,UAAf,GAA4BC,QAAQ,EAAG;AACrC,WAAO9B,wBAAA,GAA2B,IAAIC,OAAJ,EAA3B,GAA2C,IAAIK,cAAJ,EAAlD;AADqC,GAAvC;AAIAyB,SAAA,GAAUzB,cAAV;AAxFA,SAAA,OAAA;AAAA,CAAA,CAAA;;\",\n\"sources\":[\"goog/html/sanitizer/elementweakmap.js\"],\n\"sourcesContent\":[\"/**\\n * @license\\n * Copyright The Closure Library Authors.\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\n/**\\n * @package\\n * @supported IE 10+ and other browsers. IE 8 and IE 9 could be supported by\\n * by making anti-clobbering support optional.\\n */\\n\\ngoog.module('goog.html.sanitizer.ElementWeakMap');\\ngoog.module.declareLegacyNamespace();\\n\\nvar noclobber = goog.require('goog.html.sanitizer.noclobber');\\n\\n// We also need to check if WeakMap has been polyfilled, because we want to use\\n// ElementWeakMap instead of the polyfill.\\n/** @const {boolean} */\\nvar NATIVE_WEAKMAP_SUPPORTED = typeof WeakMap != 'undefined' &&\\n    WeakMap.toString().indexOf('[native code]') != -1;\\n\\n/** @const {string} */\\nvar DATA_ATTRIBUTE_NAME_PREFIX = 'data-elementweakmap-index-';\\n\\n// Increased every time a new ElementWeakMap is constructed, to guarantee\\n// that each weakmap uses a different attribute name.\\nvar weakMapCount = 0;\\n\\n/**\\n * A weakmap-like implementation for browsers that don't support native WeakMap.\\n * It uses a data attribute on the key element for O(1) lookups.\\n * @template T\\n * @constructor\\n */\\nvar ElementWeakMap = function() {\\n  /** @private {!Array<!Element>} */\\n  this.keys_ = [];\\n\\n  /** @private {!Array<!T>} */\\n  this.values_ = [];\\n\\n  /** @private @const {string} */\\n  this.dataAttributeName_ = DATA_ATTRIBUTE_NAME_PREFIX + weakMapCount++;\\n};\\n\\n/**\\n * Stores a `elementKey` -> `value` mapping.\\n * @param {!Element} elementKey\\n * @param {!T} value\\n * @return {!ElementWeakMap}\\n */\\nElementWeakMap.prototype.set = function(elementKey, value) {\\n  if (noclobber.hasElementAttribute(elementKey, this.dataAttributeName_)) {\\n    var itemIndex = parseInt(\\n        noclobber.getElementAttribute(elementKey, this.dataAttributeName_), 10);\\n    this.values_[itemIndex] = value;\\n  } else {\\n    var itemIndex = this.values_.push(value) - 1;\\n    noclobber.setElementAttribute(\\n        elementKey, this.dataAttributeName_, itemIndex.toString());\\n    this.keys_.push(elementKey);\\n  }\\n  return this;\\n};\\n\\n/**\\n * Gets the value previously stored for `elementKey`, or undefined if no\\n * value was stored for such key.\\n * @param {!Element} elementKey\\n * @return {!Element|undefined}\\n */\\nElementWeakMap.prototype.get = function(elementKey) {\\n  if (!noclobber.hasElementAttribute(elementKey, this.dataAttributeName_)) {\\n    return undefined;\\n  }\\n  var itemIndex = parseInt(\\n      noclobber.getElementAttribute(elementKey, this.dataAttributeName_), 10);\\n  return this.values_[itemIndex];\\n};\\n\\n/** Clears the map. */\\nElementWeakMap.prototype.clear = function() {\\n  this.keys_.forEach(function(el) {\\n    noclobber.removeElementAttribute(el, this.dataAttributeName_);\\n  }, this);\\n  this.keys_ = [];\\n  this.values_ = [];\\n};\\n\\n/**\\n * Returns either this weakmap adapter or the native weakmap implmentation, if\\n * available.\\n * @return {!ElementWeakMap|!WeakMap}\\n */\\nElementWeakMap.newWeakMap = function() {\\n  return NATIVE_WEAKMAP_SUPPORTED ? new WeakMap() : new ElementWeakMap();\\n};\\n\\nexports = ElementWeakMap;\\n\"],\n\"names\":[\"goog\",\"module\",\"declareLegacyNamespace\",\"noclobber\",\"require\",\"NATIVE_WEAKMAP_SUPPORTED\",\"WeakMap\",\"toString\",\"indexOf\",\"DATA_ATTRIBUTE_NAME_PREFIX\",\"weakMapCount\",\"ElementWeakMap\",\"keys_\",\"values_\",\"dataAttributeName_\",\"prototype\",\"set\",\"ElementWeakMap.prototype.set\",\"elementKey\",\"value\",\"hasElementAttribute\",\"itemIndex\",\"parseInt\",\"getElementAttribute\",\"push\",\"setElementAttribute\",\"get\",\"ElementWeakMap.prototype.get\",\"undefined\",\"clear\",\"ElementWeakMap.prototype.clear\",\"forEach\",\"el\",\"removeElementAttribute\",\"newWeakMap\",\"ElementWeakMap.newWeakMap\",\"exports\"]\n}\n"]